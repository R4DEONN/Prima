{
  "<Program>": {
    "<Program>": "OK",
    "<StatementList>": "<StatementList>0,1",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "~#~": "R<SuperClass>0",
    "~}~": "R<SuperClass>0",
    "~class~": "R<SuperClass>0",
    "~{~": "R<SuperClass>0",
    "~static~": "R<SuperClass>0",
    "~ε~": "R<SuperClass>0",
    "~override~": "R<SuperClass>0",
    "~Identifier~": "R<SuperClass>0",
    "~constructor~": "R<SuperClass>0",
    "~)~": "R<SuperClass>0",
    "~,~": "R<SuperClass>0",
    "~;~": "R<SuperClass>0",
    "<Declaration>": "<Declaration>4,1",
    "<Expression>": "<Expression>5,1",
    "<IfStatement>": "<IfStatement>6,1",
    "<ForStatement>": "<ForStatement>7,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "<Assignment>": "<Assignment>9,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "~(~": "~(~99,1",
    "~import~": "~import~40,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~export~": "~export~46,1",
    "~function~": "~function~52,1",
    "~null~": "~null~97,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "~-~": "~-~89,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "~!~": "~!~90,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~if~": "~if~105,1+~if~106,1",
    "~for~": "~for~107,1",
    "~return~": "~return~116,1+~return~117,1"
  },
  "<StatementList>0,1": {
    "~#~": "R<Program>2",
    "~}~": "~}~10,3"
  },
  "<StatementList>2,2": {
    "~#~": "R<StatementList>2",
    "~}~": "R<StatementList>2"
  },
  "<Declaration>4,1": {
    "~#~": "R<Statement>1",
    "~}~": "R<Statement>1",
    "<Statement>": "R<Statement>1",
    "<Declaration>": "R<Statement>1",
    "<VariableDeclaration>": "R<Statement>1",
    "~var~": "R<Statement>1",
    "~const~": "R<Statement>1",
    "<FunctionDeclaration>": "R<Statement>1",
    "~function~": "R<Statement>1",
    "<ClassDeclaration>": "R<Statement>1",
    "<AbstractModifier>": "R<Statement>1",
    "~abstract~": "R<Statement>1",
    "~ε~": "R<Statement>1",
    "<ImportDeclaration>": "R<Statement>1",
    "~import~": "R<Statement>1",
    "<ExportDeclaration>": "R<Statement>1",
    "~export~": "R<Statement>1",
    "<Expression>": "R<Statement>1",
    "<LogicalOrExpression>": "R<Statement>1",
    "<LogicalAndExpression>": "R<Statement>1",
    "<EqualityExpression>": "R<Statement>1",
    "<RelationalExpression>": "R<Statement>1",
    "<AdditiveExpression>": "R<Statement>1",
    "<MultiplicativeExpression>": "R<Statement>1",
    "<ExponentiationExpression>": "R<Statement>1",
    "<UnaryExpression>": "R<Statement>1",
    "<PostfixExpression>": "R<Statement>1",
    "<PrimaryExpression>": "R<Statement>1",
    "~NumberLiteral~": "R<Statement>1",
    "~StringLiteral~": "R<Statement>1",
    "~BooleanLiteral~": "R<Statement>1",
    "~null~": "R<Statement>1",
    "~Identifier~": "R<Statement>1",
    "~(~": "R<Statement>1",
    "<FunctionCall>": "R<Statement>1",
    "~-~": "R<Statement>1",
    "~!~": "R<Statement>1",
    "<IfStatement>": "R<Statement>1",
    "~if~": "R<Statement>1",
    "<ForStatement>": "R<Statement>1",
    "~for~": "R<Statement>1",
    "<ReturnStatement>": "R<Statement>1",
    "~return~": "R<Statement>1",
    "<Assignment>": "R<Statement>1"
  },
  "<Expression>5,1": {
    "~;~": "~;~5,2+~;~29,9",
    "~)~": "~)~99,3+~)~105,4+~)~106,4"
  },
  "<IfStatement>6,1": {
    "~#~": "R<Statement>1",
    "~}~": "R<Statement>1",
    "<Statement>": "R<Statement>1",
    "<Declaration>": "R<Statement>1",
    "<VariableDeclaration>": "R<Statement>1",
    "~var~": "R<Statement>1",
    "~const~": "R<Statement>1",
    "<FunctionDeclaration>": "R<Statement>1",
    "~function~": "R<Statement>1",
    "<ClassDeclaration>": "R<Statement>1",
    "<AbstractModifier>": "R<Statement>1",
    "~abstract~": "R<Statement>1",
    "~ε~": "R<Statement>1",
    "<ImportDeclaration>": "R<Statement>1",
    "~import~": "R<Statement>1",
    "<ExportDeclaration>": "R<Statement>1",
    "~export~": "R<Statement>1",
    "<Expression>": "R<Statement>1",
    "<LogicalOrExpression>": "R<Statement>1",
    "<LogicalAndExpression>": "R<Statement>1",
    "<EqualityExpression>": "R<Statement>1",
    "<RelationalExpression>": "R<Statement>1",
    "<AdditiveExpression>": "R<Statement>1",
    "<MultiplicativeExpression>": "R<Statement>1",
    "<ExponentiationExpression>": "R<Statement>1",
    "<UnaryExpression>": "R<Statement>1",
    "<PostfixExpression>": "R<Statement>1",
    "<PrimaryExpression>": "R<Statement>1",
    "~NumberLiteral~": "R<Statement>1",
    "~StringLiteral~": "R<Statement>1",
    "~BooleanLiteral~": "R<Statement>1",
    "~null~": "R<Statement>1",
    "~Identifier~": "R<Statement>1",
    "~(~": "R<Statement>1",
    "<FunctionCall>": "R<Statement>1",
    "~-~": "R<Statement>1",
    "~!~": "R<Statement>1",
    "<IfStatement>": "R<Statement>1",
    "~if~": "R<Statement>1",
    "<ForStatement>": "R<Statement>1",
    "~for~": "R<Statement>1",
    "<ReturnStatement>": "R<Statement>1",
    "~return~": "R<Statement>1",
    "<Assignment>": "R<Statement>1"
  },
  "<ForStatement>7,1": {
    "~#~": "R<Statement>1",
    "~}~": "R<Statement>1",
    "<Statement>": "R<Statement>1",
    "<Declaration>": "R<Statement>1",
    "<VariableDeclaration>": "R<Statement>1",
    "~var~": "R<Statement>1",
    "~const~": "R<Statement>1",
    "<FunctionDeclaration>": "R<Statement>1",
    "~function~": "R<Statement>1",
    "<ClassDeclaration>": "R<Statement>1",
    "<AbstractModifier>": "R<Statement>1",
    "~abstract~": "R<Statement>1",
    "~ε~": "R<Statement>1",
    "<ImportDeclaration>": "R<Statement>1",
    "~import~": "R<Statement>1",
    "<ExportDeclaration>": "R<Statement>1",
    "~export~": "R<Statement>1",
    "<Expression>": "R<Statement>1",
    "<LogicalOrExpression>": "R<Statement>1",
    "<LogicalAndExpression>": "R<Statement>1",
    "<EqualityExpression>": "R<Statement>1",
    "<RelationalExpression>": "R<Statement>1",
    "<AdditiveExpression>": "R<Statement>1",
    "<MultiplicativeExpression>": "R<Statement>1",
    "<ExponentiationExpression>": "R<Statement>1",
    "<UnaryExpression>": "R<Statement>1",
    "<PostfixExpression>": "R<Statement>1",
    "<PrimaryExpression>": "R<Statement>1",
    "~NumberLiteral~": "R<Statement>1",
    "~StringLiteral~": "R<Statement>1",
    "~BooleanLiteral~": "R<Statement>1",
    "~null~": "R<Statement>1",
    "~Identifier~": "R<Statement>1",
    "~(~": "R<Statement>1",
    "<FunctionCall>": "R<Statement>1",
    "~-~": "R<Statement>1",
    "~!~": "R<Statement>1",
    "<IfStatement>": "R<Statement>1",
    "~if~": "R<Statement>1",
    "<ForStatement>": "R<Statement>1",
    "~for~": "R<Statement>1",
    "<ReturnStatement>": "R<Statement>1",
    "~return~": "R<Statement>1",
    "<Assignment>": "R<Statement>1"
  },
  "<ReturnStatement>8,1": {
    "~;~": "~;~8,2"
  },
  "~;~8,2": {
    "~#~": "R<Statement>2",
    "~}~": "R<Statement>2",
    "<Statement>": "R<Statement>2",
    "<Declaration>": "R<Statement>2",
    "<VariableDeclaration>": "R<Statement>2",
    "~var~": "R<Statement>2",
    "~const~": "R<Statement>2",
    "<FunctionDeclaration>": "R<Statement>2",
    "~function~": "R<Statement>2",
    "<ClassDeclaration>": "R<Statement>2",
    "<AbstractModifier>": "R<Statement>2",
    "~abstract~": "R<Statement>2",
    "~ε~": "R<Statement>2",
    "<ImportDeclaration>": "R<Statement>2",
    "~import~": "R<Statement>2",
    "<ExportDeclaration>": "R<Statement>2",
    "~export~": "R<Statement>2",
    "<Expression>": "R<Statement>2",
    "<LogicalOrExpression>": "R<Statement>2",
    "<LogicalAndExpression>": "R<Statement>2",
    "<EqualityExpression>": "R<Statement>2",
    "<RelationalExpression>": "R<Statement>2",
    "<AdditiveExpression>": "R<Statement>2",
    "<MultiplicativeExpression>": "R<Statement>2",
    "<ExponentiationExpression>": "R<Statement>2",
    "<UnaryExpression>": "R<Statement>2",
    "<PostfixExpression>": "R<Statement>2",
    "<PrimaryExpression>": "R<Statement>2",
    "~NumberLiteral~": "R<Statement>2",
    "~StringLiteral~": "R<Statement>2",
    "~BooleanLiteral~": "R<Statement>2",
    "~null~": "R<Statement>2",
    "~Identifier~": "R<Statement>2",
    "~(~": "R<Statement>2",
    "<FunctionCall>": "R<Statement>2",
    "~-~": "R<Statement>2",
    "~!~": "R<Statement>2",
    "<IfStatement>": "R<Statement>2",
    "~if~": "R<Statement>2",
    "<ForStatement>": "R<Statement>2",
    "~for~": "R<Statement>2",
    "<ReturnStatement>": "R<Statement>2",
    "~return~": "R<Statement>2",
    "<Assignment>": "R<Statement>2",
    "<ClassElement>": "R<Statement>2",
    "<PropertyDefinition>": "R<Statement>2",
    "<AccessibilityModifier>": "R<Statement>2",
    "~public~": "R<Statement>2",
    "~private~": "R<Statement>2",
    "~protected~": "R<Statement>2",
    "<MethodDefinition>": "R<Statement>2"
  },
  "<Assignment>9,1": {
    "~;~": "~;~9,2"
  },
  "~;~9,2": {
    "~#~": "R<Statement>2",
    "~}~": "R<Statement>2",
    "<Statement>": "R<Statement>2",
    "<Declaration>": "R<Statement>2",
    "<VariableDeclaration>": "R<Statement>2",
    "~var~": "R<Statement>2",
    "~const~": "R<Statement>2",
    "<FunctionDeclaration>": "R<Statement>2",
    "~function~": "R<Statement>2",
    "<ClassDeclaration>": "R<Statement>2",
    "<AbstractModifier>": "R<Statement>2",
    "~abstract~": "R<Statement>2",
    "~ε~": "R<Statement>2",
    "<ImportDeclaration>": "R<Statement>2",
    "~import~": "R<Statement>2",
    "<ExportDeclaration>": "R<Statement>2",
    "~export~": "R<Statement>2",
    "<Expression>": "R<Statement>2",
    "<LogicalOrExpression>": "R<Statement>2",
    "<LogicalAndExpression>": "R<Statement>2",
    "<EqualityExpression>": "R<Statement>2",
    "<RelationalExpression>": "R<Statement>2",
    "<AdditiveExpression>": "R<Statement>2",
    "<MultiplicativeExpression>": "R<Statement>2",
    "<ExponentiationExpression>": "R<Statement>2",
    "<UnaryExpression>": "R<Statement>2",
    "<PostfixExpression>": "R<Statement>2",
    "<PrimaryExpression>": "R<Statement>2",
    "~NumberLiteral~": "R<Statement>2",
    "~StringLiteral~": "R<Statement>2",
    "~BooleanLiteral~": "R<Statement>2",
    "~null~": "R<Statement>2",
    "~Identifier~": "R<Statement>2",
    "~(~": "R<Statement>2",
    "<FunctionCall>": "R<Statement>2",
    "~-~": "R<Statement>2",
    "~!~": "R<Statement>2",
    "<IfStatement>": "R<Statement>2",
    "~if~": "R<Statement>2",
    "<ForStatement>": "R<Statement>2",
    "~for~": "R<Statement>2",
    "<ReturnStatement>": "R<Statement>2",
    "~return~": "R<Statement>2",
    "<Assignment>": "R<Statement>2",
    "<ClassElement>": "R<Statement>2",
    "<PropertyDefinition>": "R<Statement>2",
    "<AccessibilityModifier>": "R<Statement>2",
    "~public~": "R<Statement>2",
    "~private~": "R<Statement>2",
    "~protected~": "R<Statement>2",
    "<MethodDefinition>": "R<Statement>2"
  },
  "~{~10,1": {
    "<StatementList>": "<StatementList>10,2",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "<Declaration>": "<Declaration>4,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "~function~": "~function~52,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "~import~": "~import~40,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~export~": "~export~46,1",
    "<Expression>": "<Expression>5,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1+~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<IfStatement>": "<IfStatement>6,1",
    "~if~": "~if~105,1+~if~106,1",
    "<ForStatement>": "<ForStatement>7,1",
    "~for~": "~for~107,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "~return~": "~return~116,1+~return~117,1",
    "<Assignment>": "<Assignment>9,1",
    "<ClassElementList>": "<ClassElementList>19,6",
    "<ClassElement>": "<ClassElement>24,1+<ClassElement>25,1",
    "<PropertyDefinition>": "<PropertyDefinition>27,1",
    "<AccessibilityModifier>": "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1",
    "~public~": "~public~32,1",
    "~private~": "~private~33,1",
    "~protected~": "~protected~34,1",
    "<MethodDefinition>": "<MethodDefinition>28,1",
    "<ImportSpecifierList>": "<ImportSpecifierList>40,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>46,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1"
  },
  "<StatementList>10,2": {
    "~#~": "R<Block>3",
    "~}~": "~}~10,3"
  },
  "~}~10,3": {
    "~}~": "R<Block>3",
    "<ClassElement>": "R<Block>3",
    "<PropertyDefinition>": "R<Block>3",
    "<AccessibilityModifier>": "R<Block>3",
    "~public~": "R<Block>3",
    "~private~": "R<Block>3",
    "~protected~": "R<Block>3",
    "~ε~": "R<Block>3",
    "<MethodDefinition>": "R<Block>3",
    "~#~": "R<Block>3",
    "<Statement>": "R<Block>3",
    "<Declaration>": "R<Block>3",
    "<VariableDeclaration>": "R<Block>3",
    "~var~": "R<Block>3",
    "~const~": "R<Block>3",
    "<FunctionDeclaration>": "R<Block>3",
    "~function~": "R<Block>3",
    "<ClassDeclaration>": "R<Block>3",
    "<AbstractModifier>": "R<Block>3",
    "~abstract~": "R<Block>3",
    "<ImportDeclaration>": "R<Block>3",
    "~import~": "R<Block>3",
    "<ExportDeclaration>": "R<Block>3",
    "~export~": "R<Block>3",
    "<Expression>": "R<Block>3",
    "<LogicalOrExpression>": "R<Block>3",
    "<LogicalAndExpression>": "R<Block>3",
    "<EqualityExpression>": "R<Block>3",
    "<RelationalExpression>": "R<Block>3",
    "<AdditiveExpression>": "R<Block>3",
    "<MultiplicativeExpression>": "R<Block>3",
    "<ExponentiationExpression>": "R<Block>3",
    "<UnaryExpression>": "R<Block>3",
    "<PostfixExpression>": "R<Block>3",
    "<PrimaryExpression>": "R<Block>3",
    "~NumberLiteral~": "R<Block>3",
    "~StringLiteral~": "R<Block>3",
    "~BooleanLiteral~": "R<Block>3",
    "~null~": "R<Block>3",
    "~Identifier~": "R<Block>3",
    "~(~": "R<Block>3",
    "<FunctionCall>": "R<Block>3",
    "~-~": "R<Block>3",
    "~!~": "R<Block>3",
    "<IfStatement>": "R<Block>3",
    "~if~": "R<Block>3",
    "<ForStatement>": "R<Block>3",
    "~for~": "R<Block>3",
    "<ReturnStatement>": "R<Block>3",
    "~return~": "R<Block>3",
    "<Assignment>": "R<Block>3",
    "~else~": "R<Block>3",
    "~from~": "R<Block>3",
    "~;~": "R<Block>3"
  },
  "<VariableDeclaration>11,1": {
    "~;~": "~;~11,2"
  },
  "~;~11,2": {
    "~#~": "R<Declaration>2",
    "~}~": "R<Declaration>2",
    "<Statement>": "R<Declaration>2",
    "<Declaration>": "R<Declaration>2",
    "<VariableDeclaration>": "R<Declaration>2",
    "~var~": "R<Declaration>2",
    "~const~": "R<Declaration>2",
    "<FunctionDeclaration>": "R<Declaration>2",
    "~function~": "R<Declaration>2",
    "<ClassDeclaration>": "R<Declaration>2",
    "<AbstractModifier>": "R<Declaration>2",
    "~abstract~": "R<Declaration>2",
    "~ε~": "R<Declaration>2",
    "<ImportDeclaration>": "R<Declaration>2",
    "~import~": "R<Declaration>2",
    "<ExportDeclaration>": "R<Declaration>2",
    "~export~": "R<Declaration>2",
    "<Expression>": "R<Declaration>2",
    "<LogicalOrExpression>": "R<Declaration>2",
    "<LogicalAndExpression>": "R<Declaration>2",
    "<EqualityExpression>": "R<Declaration>2",
    "<RelationalExpression>": "R<Declaration>2",
    "<AdditiveExpression>": "R<Declaration>2",
    "<MultiplicativeExpression>": "R<Declaration>2",
    "<ExponentiationExpression>": "R<Declaration>2",
    "<UnaryExpression>": "R<Declaration>2",
    "<PostfixExpression>": "R<Declaration>2",
    "<PrimaryExpression>": "R<Declaration>2",
    "~NumberLiteral~": "R<Declaration>2",
    "~StringLiteral~": "R<Declaration>2",
    "~BooleanLiteral~": "R<Declaration>2",
    "~null~": "R<Declaration>2",
    "~Identifier~": "R<Declaration>2",
    "~(~": "R<Declaration>2",
    "<FunctionCall>": "R<Declaration>2",
    "~-~": "R<Declaration>2",
    "~!~": "R<Declaration>2",
    "<IfStatement>": "R<Declaration>2",
    "~if~": "R<Declaration>2",
    "<ForStatement>": "R<Declaration>2",
    "~for~": "R<Declaration>2",
    "<ReturnStatement>": "R<Declaration>2",
    "~return~": "R<Declaration>2",
    "<Assignment>": "R<Declaration>2",
    "<ClassElement>": "R<Declaration>2",
    "<PropertyDefinition>": "R<Declaration>2",
    "<AccessibilityModifier>": "R<Declaration>2",
    "~public~": "R<Declaration>2",
    "~private~": "R<Declaration>2",
    "~protected~": "R<Declaration>2",
    "<MethodDefinition>": "R<Declaration>2"
  },
  "<FunctionDeclaration>12,1": {
    "~#~": "R<Declaration>1",
    "~}~": "R<Declaration>1",
    "<Statement>": "R<Declaration>1",
    "<Declaration>": "R<Declaration>1",
    "<VariableDeclaration>": "R<Declaration>1",
    "~var~": "R<Declaration>1",
    "~const~": "R<Declaration>1",
    "<FunctionDeclaration>": "R<Declaration>1",
    "~function~": "R<Declaration>1",
    "<ClassDeclaration>": "R<Declaration>1",
    "<AbstractModifier>": "R<Declaration>1",
    "~abstract~": "R<Declaration>1",
    "~ε~": "R<Declaration>1",
    "<ImportDeclaration>": "R<Declaration>1",
    "~import~": "R<Declaration>1",
    "<ExportDeclaration>": "R<Declaration>1",
    "~export~": "R<Declaration>1",
    "<Expression>": "R<Declaration>1",
    "<LogicalOrExpression>": "R<Declaration>1",
    "<LogicalAndExpression>": "R<Declaration>1",
    "<EqualityExpression>": "R<Declaration>1",
    "<RelationalExpression>": "R<Declaration>1",
    "<AdditiveExpression>": "R<Declaration>1",
    "<MultiplicativeExpression>": "R<Declaration>1",
    "<ExponentiationExpression>": "R<Declaration>1",
    "<UnaryExpression>": "R<Declaration>1",
    "<PostfixExpression>": "R<Declaration>1",
    "<PrimaryExpression>": "R<Declaration>1",
    "~NumberLiteral~": "R<Declaration>1",
    "~StringLiteral~": "R<Declaration>1",
    "~BooleanLiteral~": "R<Declaration>1",
    "~null~": "R<Declaration>1",
    "~Identifier~": "R<Declaration>1",
    "~(~": "R<Declaration>1",
    "<FunctionCall>": "R<Declaration>1",
    "~-~": "R<Declaration>1",
    "~!~": "R<Declaration>1",
    "<IfStatement>": "R<Declaration>1",
    "~if~": "R<Declaration>1",
    "<ForStatement>": "R<Declaration>1",
    "~for~": "R<Declaration>1",
    "<ReturnStatement>": "R<Declaration>1",
    "~return~": "R<Declaration>1",
    "<Assignment>": "R<Declaration>1"
  },
  "<ClassDeclaration>13,1": {
    "~#~": "R<Declaration>1",
    "~}~": "R<Declaration>1",
    "<Statement>": "R<Declaration>1",
    "<Declaration>": "R<Declaration>1",
    "<VariableDeclaration>": "R<Declaration>1",
    "~var~": "R<Declaration>1",
    "~const~": "R<Declaration>1",
    "<FunctionDeclaration>": "R<Declaration>1",
    "~function~": "R<Declaration>1",
    "<ClassDeclaration>": "R<Declaration>1",
    "<AbstractModifier>": "R<Declaration>1",
    "~abstract~": "R<Declaration>1",
    "~ε~": "R<Declaration>1",
    "<ImportDeclaration>": "R<Declaration>1",
    "~import~": "R<Declaration>1",
    "<ExportDeclaration>": "R<Declaration>1",
    "~export~": "R<Declaration>1",
    "<Expression>": "R<Declaration>1",
    "<LogicalOrExpression>": "R<Declaration>1",
    "<LogicalAndExpression>": "R<Declaration>1",
    "<EqualityExpression>": "R<Declaration>1",
    "<RelationalExpression>": "R<Declaration>1",
    "<AdditiveExpression>": "R<Declaration>1",
    "<MultiplicativeExpression>": "R<Declaration>1",
    "<ExponentiationExpression>": "R<Declaration>1",
    "<UnaryExpression>": "R<Declaration>1",
    "<PostfixExpression>": "R<Declaration>1",
    "<PrimaryExpression>": "R<Declaration>1",
    "~NumberLiteral~": "R<Declaration>1",
    "~StringLiteral~": "R<Declaration>1",
    "~BooleanLiteral~": "R<Declaration>1",
    "~null~": "R<Declaration>1",
    "~Identifier~": "R<Declaration>1",
    "~(~": "R<Declaration>1",
    "<FunctionCall>": "R<Declaration>1",
    "~-~": "R<Declaration>1",
    "~!~": "R<Declaration>1",
    "<IfStatement>": "R<Declaration>1",
    "~if~": "R<Declaration>1",
    "<ForStatement>": "R<Declaration>1",
    "~for~": "R<Declaration>1",
    "<ReturnStatement>": "R<Declaration>1",
    "~return~": "R<Declaration>1",
    "<Assignment>": "R<Declaration>1"
  },
  "<ImportDeclaration>14,1": {
    "~#~": "R<Declaration>1",
    "~}~": "R<Declaration>1",
    "<Statement>": "R<Declaration>1",
    "<Declaration>": "R<Declaration>1",
    "<VariableDeclaration>": "R<Declaration>1",
    "~var~": "R<Declaration>1",
    "~const~": "R<Declaration>1",
    "<FunctionDeclaration>": "R<Declaration>1",
    "~function~": "R<Declaration>1",
    "<ClassDeclaration>": "R<Declaration>1",
    "<AbstractModifier>": "R<Declaration>1",
    "~abstract~": "R<Declaration>1",
    "~ε~": "R<Declaration>1",
    "<ImportDeclaration>": "R<Declaration>1",
    "~import~": "R<Declaration>1",
    "<ExportDeclaration>": "R<Declaration>1",
    "~export~": "R<Declaration>1",
    "<Expression>": "R<Declaration>1",
    "<LogicalOrExpression>": "R<Declaration>1",
    "<LogicalAndExpression>": "R<Declaration>1",
    "<EqualityExpression>": "R<Declaration>1",
    "<RelationalExpression>": "R<Declaration>1",
    "<AdditiveExpression>": "R<Declaration>1",
    "<MultiplicativeExpression>": "R<Declaration>1",
    "<ExponentiationExpression>": "R<Declaration>1",
    "<UnaryExpression>": "R<Declaration>1",
    "<PostfixExpression>": "R<Declaration>1",
    "<PrimaryExpression>": "R<Declaration>1",
    "~NumberLiteral~": "R<Declaration>1",
    "~StringLiteral~": "R<Declaration>1",
    "~BooleanLiteral~": "R<Declaration>1",
    "~null~": "R<Declaration>1",
    "~Identifier~": "R<Declaration>1",
    "~(~": "R<Declaration>1",
    "<FunctionCall>": "R<Declaration>1",
    "~-~": "R<Declaration>1",
    "~!~": "R<Declaration>1",
    "<IfStatement>": "R<Declaration>1",
    "~if~": "R<Declaration>1",
    "<ForStatement>": "R<Declaration>1",
    "~for~": "R<Declaration>1",
    "<ReturnStatement>": "R<Declaration>1",
    "~return~": "R<Declaration>1",
    "<Assignment>": "R<Declaration>1"
  },
  "<ExportDeclaration>15,1": {
    "~#~": "R<Declaration>1",
    "~}~": "R<Declaration>1",
    "<Statement>": "R<Declaration>1",
    "<Declaration>": "R<Declaration>1",
    "<VariableDeclaration>": "R<Declaration>1",
    "~var~": "R<Declaration>1",
    "~const~": "R<Declaration>1",
    "<FunctionDeclaration>": "R<Declaration>1",
    "~function~": "R<Declaration>1",
    "<ClassDeclaration>": "R<Declaration>1",
    "<AbstractModifier>": "R<Declaration>1",
    "~abstract~": "R<Declaration>1",
    "~ε~": "R<Declaration>1",
    "<ImportDeclaration>": "R<Declaration>1",
    "~import~": "R<Declaration>1",
    "<ExportDeclaration>": "R<Declaration>1",
    "~export~": "R<Declaration>1",
    "<Expression>": "R<Declaration>1",
    "<LogicalOrExpression>": "R<Declaration>1",
    "<LogicalAndExpression>": "R<Declaration>1",
    "<EqualityExpression>": "R<Declaration>1",
    "<RelationalExpression>": "R<Declaration>1",
    "<AdditiveExpression>": "R<Declaration>1",
    "<MultiplicativeExpression>": "R<Declaration>1",
    "<ExponentiationExpression>": "R<Declaration>1",
    "<UnaryExpression>": "R<Declaration>1",
    "<PostfixExpression>": "R<Declaration>1",
    "<PrimaryExpression>": "R<Declaration>1",
    "~NumberLiteral~": "R<Declaration>1",
    "~StringLiteral~": "R<Declaration>1",
    "~BooleanLiteral~": "R<Declaration>1",
    "~null~": "R<Declaration>1",
    "~Identifier~": "R<Declaration>1",
    "~(~": "R<Declaration>1",
    "<FunctionCall>": "R<Declaration>1",
    "~-~": "R<Declaration>1",
    "~!~": "R<Declaration>1",
    "<IfStatement>": "R<Declaration>1",
    "~if~": "R<Declaration>1",
    "<ForStatement>": "R<Declaration>1",
    "~for~": "R<Declaration>1",
    "<ReturnStatement>": "R<Declaration>1",
    "~return~": "R<Declaration>1",
    "<Assignment>": "R<Declaration>1"
  },
  "~const~18,1": {
    "~Identifier~": "~Identifier~18,2"
  },
  "~Identifier~18,2": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<AbstractModifier>19,1": {
    "~class~": "~class~19,2"
  },
  "~class~19,2": {
    "~Identifier~": "~Identifier~19,3"
  },
  "~Identifier~19,3": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<SuperClass>19,4": {
    "~{~": "~{~19,5"
  },
  "~{~19,5": {
    "<StatementList>": "<StatementList>10,2",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "<Declaration>": "<Declaration>4,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "~function~": "~function~52,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "~import~": "~import~40,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~export~": "~export~46,1",
    "<Expression>": "<Expression>5,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1+~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<IfStatement>": "<IfStatement>6,1",
    "~if~": "~if~105,1+~if~106,1",
    "<ForStatement>": "<ForStatement>7,1",
    "~for~": "~for~107,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "~return~": "~return~116,1+~return~117,1",
    "<Assignment>": "<Assignment>9,1",
    "<ClassElementList>": "<ClassElementList>19,6",
    "<ClassElement>": "<ClassElement>24,1+<ClassElement>25,1",
    "<PropertyDefinition>": "<PropertyDefinition>27,1",
    "<AccessibilityModifier>": "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1",
    "~public~": "~public~32,1",
    "~private~": "~private~33,1",
    "~protected~": "~protected~34,1",
    "<MethodDefinition>": "<MethodDefinition>28,1",
    "<ImportSpecifierList>": "<ImportSpecifierList>40,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>46,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1"
  },
  "<ClassElementList>19,6": {
    "~}~": "~}~19,7"
  },
  "~}~19,7": {
    "~}~": "R<ClassDeclaration>7",
    "<ClassElement>": "R<ClassDeclaration>7",
    "<PropertyDefinition>": "R<ClassDeclaration>7",
    "<AccessibilityModifier>": "R<ClassDeclaration>7",
    "~public~": "R<ClassDeclaration>7",
    "~private~": "R<ClassDeclaration>7",
    "~protected~": "R<ClassDeclaration>7",
    "~ε~": "R<ClassDeclaration>7",
    "<MethodDefinition>": "R<ClassDeclaration>7",
    "~#~": "R<ClassDeclaration>7",
    "<Statement>": "R<ClassDeclaration>7",
    "<Declaration>": "R<ClassDeclaration>7",
    "<VariableDeclaration>": "R<ClassDeclaration>7",
    "~var~": "R<ClassDeclaration>7",
    "~const~": "R<ClassDeclaration>7",
    "<FunctionDeclaration>": "R<ClassDeclaration>7",
    "~function~": "R<ClassDeclaration>7",
    "<ClassDeclaration>": "R<ClassDeclaration>7",
    "<AbstractModifier>": "R<ClassDeclaration>7",
    "~abstract~": "R<ClassDeclaration>7",
    "<ImportDeclaration>": "R<ClassDeclaration>7",
    "~import~": "R<ClassDeclaration>7",
    "<ExportDeclaration>": "R<ClassDeclaration>7",
    "~export~": "R<ClassDeclaration>7",
    "<Expression>": "R<ClassDeclaration>7",
    "<LogicalOrExpression>": "R<ClassDeclaration>7",
    "<LogicalAndExpression>": "R<ClassDeclaration>7",
    "<EqualityExpression>": "R<ClassDeclaration>7",
    "<RelationalExpression>": "R<ClassDeclaration>7",
    "<AdditiveExpression>": "R<ClassDeclaration>7",
    "<MultiplicativeExpression>": "R<ClassDeclaration>7",
    "<ExponentiationExpression>": "R<ClassDeclaration>7",
    "<UnaryExpression>": "R<ClassDeclaration>7",
    "<PostfixExpression>": "R<ClassDeclaration>7",
    "<PrimaryExpression>": "R<ClassDeclaration>7",
    "~NumberLiteral~": "R<ClassDeclaration>7",
    "~StringLiteral~": "R<ClassDeclaration>7",
    "~BooleanLiteral~": "R<ClassDeclaration>7",
    "~null~": "R<ClassDeclaration>7",
    "~Identifier~": "R<ClassDeclaration>7",
    "~(~": "R<ClassDeclaration>7",
    "<FunctionCall>": "R<ClassDeclaration>7",
    "~-~": "R<ClassDeclaration>7",
    "~!~": "R<ClassDeclaration>7",
    "<IfStatement>": "R<ClassDeclaration>7",
    "~if~": "R<ClassDeclaration>7",
    "<ForStatement>": "R<ClassDeclaration>7",
    "~for~": "R<ClassDeclaration>7",
    "<ReturnStatement>": "R<ClassDeclaration>7",
    "~return~": "R<ClassDeclaration>7",
    "<Assignment>": "R<ClassDeclaration>7",
    "~else~": "R<ClassDeclaration>7",
    "~from~": "R<ClassDeclaration>7",
    "~;~": "R<ClassDeclaration>7"
  },
  "~abstract~20,1": {
    "~class~": "R<AbstractModifier>1"
  },
  "~extends~22,1": {
    "<Expression>": "<Expression>22,2",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<Expression>22,2": {
    "~;~": "R<SuperClass>2",
    "~{~": "R<SuperClass>2",
    "~)~": "R<SuperClass>2",
    "~,~": "R<SuperClass>2"
  },
  "<ClassElementList>25,2": {
    "~}~": "R<ClassElementList>2"
  },
  "<PropertyDefinition>27,1": {
    "~}~": "R<ClassElement>1",
    "<ClassElement>": "R<ClassElement>1",
    "<PropertyDefinition>": "R<ClassElement>1",
    "<AccessibilityModifier>": "R<ClassElement>1",
    "~public~": "R<ClassElement>1",
    "~private~": "R<ClassElement>1",
    "~protected~": "R<ClassElement>1",
    "~ε~": "R<ClassElement>1",
    "<MethodDefinition>": "R<ClassElement>1"
  },
  "<MethodDefinition>28,1": {
    "~}~": "R<ClassElement>1",
    "<ClassElement>": "R<ClassElement>1",
    "<PropertyDefinition>": "R<ClassElement>1",
    "<AccessibilityModifier>": "R<ClassElement>1",
    "~public~": "R<ClassElement>1",
    "~private~": "R<ClassElement>1",
    "~protected~": "R<ClassElement>1",
    "~ε~": "R<ClassElement>1",
    "<MethodDefinition>": "R<ClassElement>1"
  },
  "~constructor~31,4": {
    "~(~": "~(~31,5"
  },
  "~(~31,5": {
    "<ParameterList>": "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4",
    "<Parameter>": "<Parameter>53,1",
    "~Identifier~": "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "<Expression>": "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ArgumentList>": "<ArgumentList>101,3+<ArgumentList>103,1",
    "<FirstForArgument>": "<FirstForArgument>107,3",
    "<VariableDeclaration>": "<VariableDeclaration>108,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<Assignment>": "<Assignment>110,1"
  },
  "~public~32,1": {
    "~static~": "R<AccessibilityModifier>1",
    "~ε~": "R<AccessibilityModifier>1"
  },
  "~private~33,1": {
    "~static~": "R<AccessibilityModifier>1",
    "~ε~": "R<AccessibilityModifier>1"
  },
  "~protected~34,1": {
    "~static~": "R<AccessibilityModifier>1",
    "~ε~": "R<AccessibilityModifier>1"
  },
  "~static~36,1": {
    "~override~": "R<StaticModifier>1",
    "~ε~": "R<StaticModifier>1"
  },
  "~override~38,1": {
    "~Identifier~": "R<OverrideModifier>1",
    "~constructor~": "R<OverrideModifier>1"
  },
  "~import~40,1": {
    "~{~": "~{~40,2"
  },
  "~{~40,2": {
    "<StatementList>": "<StatementList>10,2",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "<Declaration>": "<Declaration>4,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "~function~": "~function~52,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "~import~": "~import~40,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~export~": "~export~46,1",
    "<Expression>": "<Expression>5,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1+~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<IfStatement>": "<IfStatement>6,1",
    "~if~": "~if~105,1+~if~106,1",
    "<ForStatement>": "<ForStatement>7,1",
    "~for~": "~for~107,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "~return~": "~return~116,1+~return~117,1",
    "<Assignment>": "<Assignment>9,1",
    "<ClassElementList>": "<ClassElementList>19,6",
    "<ClassElement>": "<ClassElement>24,1+<ClassElement>25,1",
    "<PropertyDefinition>": "<PropertyDefinition>27,1",
    "<AccessibilityModifier>": "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1",
    "~public~": "~public~32,1",
    "~private~": "~private~33,1",
    "~protected~": "~protected~34,1",
    "<MethodDefinition>": "<MethodDefinition>28,1",
    "<ImportSpecifierList>": "<ImportSpecifierList>40,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>46,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1"
  },
  "<ImportSpecifierList>40,3": {
    "~}~": "~}~40,4"
  },
  "~}~40,4": {
    "~from~": "~from~40,5",
    "~;~": "~;~46,5"
  },
  "~from~40,5": {
    "~StringLiteral~": "~StringLiteral~40,6"
  },
  "~StringLiteral~40,6": {
    "~;~": "~;~40,7"
  },
  "~;~40,7": {
    "~#~": "R<ImportDeclaration>7",
    "~}~": "R<ImportDeclaration>7",
    "<Statement>": "R<ImportDeclaration>7",
    "<Declaration>": "R<ImportDeclaration>7",
    "<VariableDeclaration>": "R<ImportDeclaration>7",
    "~var~": "R<ImportDeclaration>7",
    "~const~": "R<ImportDeclaration>7",
    "<FunctionDeclaration>": "R<ImportDeclaration>7",
    "~function~": "R<ImportDeclaration>7",
    "<ClassDeclaration>": "R<ImportDeclaration>7",
    "<AbstractModifier>": "R<ImportDeclaration>7",
    "~abstract~": "R<ImportDeclaration>7",
    "~ε~": "R<ImportDeclaration>7",
    "<ImportDeclaration>": "R<ImportDeclaration>7",
    "~import~": "R<ImportDeclaration>7",
    "<ExportDeclaration>": "R<ImportDeclaration>7",
    "~export~": "R<ImportDeclaration>7",
    "<Expression>": "R<ImportDeclaration>7",
    "<LogicalOrExpression>": "R<ImportDeclaration>7",
    "<LogicalAndExpression>": "R<ImportDeclaration>7",
    "<EqualityExpression>": "R<ImportDeclaration>7",
    "<RelationalExpression>": "R<ImportDeclaration>7",
    "<AdditiveExpression>": "R<ImportDeclaration>7",
    "<MultiplicativeExpression>": "R<ImportDeclaration>7",
    "<ExponentiationExpression>": "R<ImportDeclaration>7",
    "<UnaryExpression>": "R<ImportDeclaration>7",
    "<PostfixExpression>": "R<ImportDeclaration>7",
    "<PrimaryExpression>": "R<ImportDeclaration>7",
    "~NumberLiteral~": "R<ImportDeclaration>7",
    "~StringLiteral~": "R<ImportDeclaration>7",
    "~BooleanLiteral~": "R<ImportDeclaration>7",
    "~null~": "R<ImportDeclaration>7",
    "~Identifier~": "R<ImportDeclaration>7",
    "~(~": "R<ImportDeclaration>7",
    "<FunctionCall>": "R<ImportDeclaration>7",
    "~-~": "R<ImportDeclaration>7",
    "~!~": "R<ImportDeclaration>7",
    "<IfStatement>": "R<ImportDeclaration>7",
    "~if~": "R<ImportDeclaration>7",
    "<ForStatement>": "R<ImportDeclaration>7",
    "~for~": "R<ImportDeclaration>7",
    "<ReturnStatement>": "R<ImportDeclaration>7",
    "~return~": "R<ImportDeclaration>7",
    "<Assignment>": "R<ImportDeclaration>7",
    "<ClassElement>": "R<ImportDeclaration>7",
    "<PropertyDefinition>": "R<ImportDeclaration>7",
    "<AccessibilityModifier>": "R<ImportDeclaration>7",
    "~public~": "R<ImportDeclaration>7",
    "~private~": "R<ImportDeclaration>7",
    "~protected~": "R<ImportDeclaration>7",
    "<MethodDefinition>": "R<ImportDeclaration>7"
  },
  "~,~42,2": {
    "<ImportSpecifierList>": "<ImportSpecifierList>42,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "~Identifier~": "~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1+~Identifier~56,1+~Identifier~98,1+~Identifier~101,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>48,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1",
    "<Parameter>": "<Parameter>54,3",
    "<Expression>": "<Expression>103,3",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<ImportSpecifierList>42,3": {
    "~}~": "R<ImportSpecifierList>3"
  },
  "~export~46,1": {
    "~{~": "~{~46,2"
  },
  "~{~46,2": {
    "<StatementList>": "<StatementList>10,2",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "<Declaration>": "<Declaration>4,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "~function~": "~function~52,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "~import~": "~import~40,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~export~": "~export~46,1",
    "<Expression>": "<Expression>5,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1+~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<IfStatement>": "<IfStatement>6,1",
    "~if~": "~if~105,1+~if~106,1",
    "<ForStatement>": "<ForStatement>7,1",
    "~for~": "~for~107,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "~return~": "~return~116,1+~return~117,1",
    "<Assignment>": "<Assignment>9,1",
    "<ClassElementList>": "<ClassElementList>19,6",
    "<ClassElement>": "<ClassElement>24,1+<ClassElement>25,1",
    "<PropertyDefinition>": "<PropertyDefinition>27,1",
    "<AccessibilityModifier>": "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1",
    "~public~": "~public~32,1",
    "~private~": "~private~33,1",
    "~protected~": "~protected~34,1",
    "<MethodDefinition>": "<MethodDefinition>28,1",
    "<ImportSpecifierList>": "<ImportSpecifierList>40,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>46,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1"
  },
  "<ExportSpecifierList>46,3": {
    "~}~": "~}~46,4"
  },
  "~}~46,4": {
    "~from~": "~from~40,5",
    "~;~": "~;~46,5"
  },
  "~;~46,5": {
    "~#~": "R<ExportDeclaration>5",
    "~}~": "R<ExportDeclaration>5",
    "<Statement>": "R<ExportDeclaration>5",
    "<Declaration>": "R<ExportDeclaration>5",
    "<VariableDeclaration>": "R<ExportDeclaration>5",
    "~var~": "R<ExportDeclaration>5",
    "~const~": "R<ExportDeclaration>5",
    "<FunctionDeclaration>": "R<ExportDeclaration>5",
    "~function~": "R<ExportDeclaration>5",
    "<ClassDeclaration>": "R<ExportDeclaration>5",
    "<AbstractModifier>": "R<ExportDeclaration>5",
    "~abstract~": "R<ExportDeclaration>5",
    "~ε~": "R<ExportDeclaration>5",
    "<ImportDeclaration>": "R<ExportDeclaration>5",
    "~import~": "R<ExportDeclaration>5",
    "<ExportDeclaration>": "R<ExportDeclaration>5",
    "~export~": "R<ExportDeclaration>5",
    "<Expression>": "R<ExportDeclaration>5",
    "<LogicalOrExpression>": "R<ExportDeclaration>5",
    "<LogicalAndExpression>": "R<ExportDeclaration>5",
    "<EqualityExpression>": "R<ExportDeclaration>5",
    "<RelationalExpression>": "R<ExportDeclaration>5",
    "<AdditiveExpression>": "R<ExportDeclaration>5",
    "<MultiplicativeExpression>": "R<ExportDeclaration>5",
    "<ExponentiationExpression>": "R<ExportDeclaration>5",
    "<UnaryExpression>": "R<ExportDeclaration>5",
    "<PostfixExpression>": "R<ExportDeclaration>5",
    "<PrimaryExpression>": "R<ExportDeclaration>5",
    "~NumberLiteral~": "R<ExportDeclaration>5",
    "~StringLiteral~": "R<ExportDeclaration>5",
    "~BooleanLiteral~": "R<ExportDeclaration>5",
    "~null~": "R<ExportDeclaration>5",
    "~Identifier~": "R<ExportDeclaration>5",
    "~(~": "R<ExportDeclaration>5",
    "<FunctionCall>": "R<ExportDeclaration>5",
    "~-~": "R<ExportDeclaration>5",
    "~!~": "R<ExportDeclaration>5",
    "<IfStatement>": "R<ExportDeclaration>5",
    "~if~": "R<ExportDeclaration>5",
    "<ForStatement>": "R<ExportDeclaration>5",
    "~for~": "R<ExportDeclaration>5",
    "<ReturnStatement>": "R<ExportDeclaration>5",
    "~return~": "R<ExportDeclaration>5",
    "<Assignment>": "R<ExportDeclaration>5",
    "<ClassElement>": "R<ExportDeclaration>5",
    "<PropertyDefinition>": "R<ExportDeclaration>5",
    "<AccessibilityModifier>": "R<ExportDeclaration>5",
    "~public~": "R<ExportDeclaration>5",
    "~private~": "R<ExportDeclaration>5",
    "~protected~": "R<ExportDeclaration>5",
    "<MethodDefinition>": "R<ExportDeclaration>5"
  },
  "~,~48,2": {
    "<ImportSpecifierList>": "<ImportSpecifierList>42,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "~Identifier~": "~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1+~Identifier~56,1+~Identifier~98,1+~Identifier~101,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>48,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1",
    "<Parameter>": "<Parameter>54,3",
    "<Expression>": "<Expression>103,3",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<ExportSpecifierList>48,3": {
    "~}~": "R<ExportSpecifierList>3"
  },
  "~function~52,1": {
    "~Identifier~": "~Identifier~52,2"
  },
  "~Identifier~52,2": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<Parameter>53,1": {
    "~)~": "R<ParameterList>1",
    "~,~": "R<ParameterList>1"
  },
  "~,~54,2": {
    "<ImportSpecifierList>": "<ImportSpecifierList>42,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "~Identifier~": "~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1+~Identifier~56,1+~Identifier~98,1+~Identifier~101,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>48,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1",
    "<Parameter>": "<Parameter>54,3",
    "<Expression>": "<Expression>103,3",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<Parameter>54,3": {
    "~)~": "R<ParameterList>3",
    "~,~": "R<ParameterList>3"
  },
  "~number~57,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1"
  },
  "~bool~58,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1"
  },
  "~null~59,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1",
    "~||~": "R<Type>1",
    "~&&~": "R<Type>1",
    "~==~": "R<Type>1",
    "~!=~": "R<Type>1",
    "~<~": "R<Type>1",
    "~<=~": "R<Type>1",
    "~>~": "R<Type>1",
    "~>=~": "R<Type>1",
    "~+~": "R<Type>1",
    "~-~": "R<Type>1",
    "~*~": "R<Type>1",
    "~/~": "R<Type>1",
    "~%~": "R<Type>1",
    "~**~": "R<Type>1",
    "~++~": "R<Type>1",
    "~--~": "R<Type>1"
  },
  "~object~60,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1"
  },
  "~string~61,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1"
  },
  "~array~62,1": {
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~,~": "R<Type>1",
    "~{~": "R<Type>1"
  },
  "~Identifier~63,1": {
    "~:~": "R<Type>1",
    "~extends~": "R<Type>1",
    "~ε~": "R<Type>1",
    "~(~": "R<Type>1",
    "~as~": "R<Type>1",
    "~}~": "R<Type>1",
    "~,~": "R<Type>1",
    "~;~": "R<Type>1",
    "~=~": "R<Type>1",
    "~)~": "R<Type>1",
    "~{~": "R<Type>1",
    "~||~": "R<Type>1",
    "~&&~": "R<Type>1",
    "~==~": "R<Type>1",
    "~!=~": "R<Type>1",
    "~<~": "R<Type>1",
    "~<=~": "R<Type>1",
    "~>~": "R<Type>1",
    "~>=~": "R<Type>1",
    "~+~": "R<Type>1",
    "~-~": "R<Type>1",
    "~*~": "R<Type>1",
    "~/~": "R<Type>1",
    "~%~": "R<Type>1",
    "~**~": "R<Type>1",
    "~++~": "R<Type>1",
    "~--~": "R<Type>1",
    "~+=~": "R<Type>1",
    "~-=~": "R<Type>1"
  },
  "~void~65,1": {
    "~{~": "R<FunctionReturnType>1"
  },
  "~||~68,2": {
    "<LogicalAndExpression>": "<LogicalAndExpression>68,3+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<LogicalAndExpression>68,3": {
    "~;~": "R<LogicalOrExpression>3",
    "~{~": "R<LogicalOrExpression>3",
    "~)~": "R<LogicalOrExpression>3",
    "~,~": "R<LogicalOrExpression>3",
    "~||~": "R<LogicalOrExpression>3",
    "~&&~": "R<LogicalOrExpression>3"
  },
  "~&&~70,2": {
    "<EqualityExpression>": "<EqualityExpression>70,3+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<EqualityExpression>70,3": {
    "~;~": "R<LogicalAndExpression>3",
    "~{~": "R<LogicalAndExpression>3",
    "~)~": "R<LogicalAndExpression>3",
    "~,~": "R<LogicalAndExpression>3",
    "~||~": "R<LogicalAndExpression>3",
    "~&&~": "R<LogicalAndExpression>3",
    "~==~": "R<LogicalAndExpression>3",
    "~!=~": "R<LogicalAndExpression>3"
  },
  "~==~72,2": {
    "<RelationalExpression>": "<RelationalExpression>72,3+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<RelationalExpression>72,3": {
    "~;~": "R<EqualityExpression>3",
    "~{~": "R<EqualityExpression>3",
    "~)~": "R<EqualityExpression>3",
    "~,~": "R<EqualityExpression>3",
    "~||~": "R<EqualityExpression>3",
    "~&&~": "R<EqualityExpression>3",
    "~==~": "R<EqualityExpression>3",
    "~!=~": "R<EqualityExpression>3",
    "~<~": "R<EqualityExpression>3",
    "~<=~": "R<EqualityExpression>3",
    "~>~": "R<EqualityExpression>3",
    "~>=~": "R<EqualityExpression>3"
  },
  "~!=~73,2": {
    "<RelationalExpression>": "<RelationalExpression>73,3+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<RelationalExpression>73,3": {
    "~;~": "R<EqualityExpression>3",
    "~{~": "R<EqualityExpression>3",
    "~)~": "R<EqualityExpression>3",
    "~,~": "R<EqualityExpression>3",
    "~||~": "R<EqualityExpression>3",
    "~&&~": "R<EqualityExpression>3",
    "~==~": "R<EqualityExpression>3",
    "~!=~": "R<EqualityExpression>3",
    "~<~": "R<EqualityExpression>3",
    "~<=~": "R<EqualityExpression>3",
    "~>~": "R<EqualityExpression>3",
    "~>=~": "R<EqualityExpression>3"
  },
  "~<~75,2": {
    "<AdditiveExpression>": "<AdditiveExpression>75,3+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<AdditiveExpression>75,3": {
    "~;~": "R<RelationalExpression>3",
    "~{~": "R<RelationalExpression>3",
    "~)~": "R<RelationalExpression>3",
    "~,~": "R<RelationalExpression>3",
    "~||~": "R<RelationalExpression>3",
    "~&&~": "R<RelationalExpression>3",
    "~==~": "R<RelationalExpression>3",
    "~!=~": "R<RelationalExpression>3",
    "~<~": "R<RelationalExpression>3",
    "~<=~": "R<RelationalExpression>3",
    "~>~": "R<RelationalExpression>3",
    "~>=~": "R<RelationalExpression>3",
    "~+~": "R<RelationalExpression>3",
    "~-~": "R<RelationalExpression>3"
  },
  "~<=~76,2": {
    "<AdditiveExpression>": "<AdditiveExpression>76,3+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<AdditiveExpression>76,3": {
    "~;~": "R<RelationalExpression>3",
    "~{~": "R<RelationalExpression>3",
    "~)~": "R<RelationalExpression>3",
    "~,~": "R<RelationalExpression>3",
    "~||~": "R<RelationalExpression>3",
    "~&&~": "R<RelationalExpression>3",
    "~==~": "R<RelationalExpression>3",
    "~!=~": "R<RelationalExpression>3",
    "~<~": "R<RelationalExpression>3",
    "~<=~": "R<RelationalExpression>3",
    "~>~": "R<RelationalExpression>3",
    "~>=~": "R<RelationalExpression>3",
    "~+~": "R<RelationalExpression>3",
    "~-~": "R<RelationalExpression>3"
  },
  "~>~77,2": {
    "<AdditiveExpression>": "<AdditiveExpression>77,3+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<AdditiveExpression>77,3": {
    "~;~": "R<RelationalExpression>3",
    "~{~": "R<RelationalExpression>3",
    "~)~": "R<RelationalExpression>3",
    "~,~": "R<RelationalExpression>3",
    "~||~": "R<RelationalExpression>3",
    "~&&~": "R<RelationalExpression>3",
    "~==~": "R<RelationalExpression>3",
    "~!=~": "R<RelationalExpression>3",
    "~<~": "R<RelationalExpression>3",
    "~<=~": "R<RelationalExpression>3",
    "~>~": "R<RelationalExpression>3",
    "~>=~": "R<RelationalExpression>3",
    "~+~": "R<RelationalExpression>3",
    "~-~": "R<RelationalExpression>3"
  },
  "~>=~78,2": {
    "<AdditiveExpression>": "<AdditiveExpression>78,3+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<AdditiveExpression>78,3": {
    "~;~": "R<RelationalExpression>3",
    "~{~": "R<RelationalExpression>3",
    "~)~": "R<RelationalExpression>3",
    "~,~": "R<RelationalExpression>3",
    "~||~": "R<RelationalExpression>3",
    "~&&~": "R<RelationalExpression>3",
    "~==~": "R<RelationalExpression>3",
    "~!=~": "R<RelationalExpression>3",
    "~<~": "R<RelationalExpression>3",
    "~<=~": "R<RelationalExpression>3",
    "~>~": "R<RelationalExpression>3",
    "~>=~": "R<RelationalExpression>3",
    "~+~": "R<RelationalExpression>3",
    "~-~": "R<RelationalExpression>3"
  },
  "~+~80,2": {
    "<MultiplicativeExpression>": "<MultiplicativeExpression>80,3+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<MultiplicativeExpression>80,3": {
    "~;~": "R<AdditiveExpression>3",
    "~{~": "R<AdditiveExpression>3",
    "~)~": "R<AdditiveExpression>3",
    "~,~": "R<AdditiveExpression>3",
    "~||~": "R<AdditiveExpression>3",
    "~&&~": "R<AdditiveExpression>3",
    "~==~": "R<AdditiveExpression>3",
    "~!=~": "R<AdditiveExpression>3",
    "~<~": "R<AdditiveExpression>3",
    "~<=~": "R<AdditiveExpression>3",
    "~>~": "R<AdditiveExpression>3",
    "~>=~": "R<AdditiveExpression>3",
    "~+~": "R<AdditiveExpression>3",
    "~-~": "R<AdditiveExpression>3",
    "~*~": "R<AdditiveExpression>3",
    "~/~": "R<AdditiveExpression>3",
    "~%~": "R<AdditiveExpression>3"
  },
  "~-~81,2": {
    "<MultiplicativeExpression>": "<MultiplicativeExpression>81,3+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1+<UnaryExpression>89,2",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<MultiplicativeExpression>81,3": {
    "~;~": "R<AdditiveExpression>3",
    "~{~": "R<AdditiveExpression>3",
    "~)~": "R<AdditiveExpression>3",
    "~,~": "R<AdditiveExpression>3",
    "~||~": "R<AdditiveExpression>3",
    "~&&~": "R<AdditiveExpression>3",
    "~==~": "R<AdditiveExpression>3",
    "~!=~": "R<AdditiveExpression>3",
    "~<~": "R<AdditiveExpression>3",
    "~<=~": "R<AdditiveExpression>3",
    "~>~": "R<AdditiveExpression>3",
    "~>=~": "R<AdditiveExpression>3",
    "~+~": "R<AdditiveExpression>3",
    "~-~": "R<AdditiveExpression>3",
    "~*~": "R<AdditiveExpression>3",
    "~/~": "R<AdditiveExpression>3",
    "~%~": "R<AdditiveExpression>3"
  },
  "~*~83,2": {
    "<ExponentiationExpression>": "<ExponentiationExpression>83,3+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<ExponentiationExpression>83,3": {
    "~;~": "R<MultiplicativeExpression>3",
    "~{~": "R<MultiplicativeExpression>3",
    "~)~": "R<MultiplicativeExpression>3",
    "~,~": "R<MultiplicativeExpression>3",
    "~||~": "R<MultiplicativeExpression>3",
    "~&&~": "R<MultiplicativeExpression>3",
    "~==~": "R<MultiplicativeExpression>3",
    "~!=~": "R<MultiplicativeExpression>3",
    "~<~": "R<MultiplicativeExpression>3",
    "~<=~": "R<MultiplicativeExpression>3",
    "~>~": "R<MultiplicativeExpression>3",
    "~>=~": "R<MultiplicativeExpression>3",
    "~+~": "R<MultiplicativeExpression>3",
    "~-~": "R<MultiplicativeExpression>3",
    "~*~": "R<MultiplicativeExpression>3",
    "~/~": "R<MultiplicativeExpression>3",
    "~%~": "R<MultiplicativeExpression>3",
    "~**~": "R<MultiplicativeExpression>3"
  },
  "~/~84,2": {
    "<ExponentiationExpression>": "<ExponentiationExpression>84,3+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<ExponentiationExpression>84,3": {
    "~;~": "R<MultiplicativeExpression>3",
    "~{~": "R<MultiplicativeExpression>3",
    "~)~": "R<MultiplicativeExpression>3",
    "~,~": "R<MultiplicativeExpression>3",
    "~||~": "R<MultiplicativeExpression>3",
    "~&&~": "R<MultiplicativeExpression>3",
    "~==~": "R<MultiplicativeExpression>3",
    "~!=~": "R<MultiplicativeExpression>3",
    "~<~": "R<MultiplicativeExpression>3",
    "~<=~": "R<MultiplicativeExpression>3",
    "~>~": "R<MultiplicativeExpression>3",
    "~>=~": "R<MultiplicativeExpression>3",
    "~+~": "R<MultiplicativeExpression>3",
    "~-~": "R<MultiplicativeExpression>3",
    "~*~": "R<MultiplicativeExpression>3",
    "~/~": "R<MultiplicativeExpression>3",
    "~%~": "R<MultiplicativeExpression>3",
    "~**~": "R<MultiplicativeExpression>3"
  },
  "~%~85,2": {
    "<ExponentiationExpression>": "<ExponentiationExpression>85,3+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<ExponentiationExpression>85,3": {
    "~;~": "R<MultiplicativeExpression>3",
    "~{~": "R<MultiplicativeExpression>3",
    "~)~": "R<MultiplicativeExpression>3",
    "~,~": "R<MultiplicativeExpression>3",
    "~||~": "R<MultiplicativeExpression>3",
    "~&&~": "R<MultiplicativeExpression>3",
    "~==~": "R<MultiplicativeExpression>3",
    "~!=~": "R<MultiplicativeExpression>3",
    "~<~": "R<MultiplicativeExpression>3",
    "~<=~": "R<MultiplicativeExpression>3",
    "~>~": "R<MultiplicativeExpression>3",
    "~>=~": "R<MultiplicativeExpression>3",
    "~+~": "R<MultiplicativeExpression>3",
    "~-~": "R<MultiplicativeExpression>3",
    "~*~": "R<MultiplicativeExpression>3",
    "~/~": "R<MultiplicativeExpression>3",
    "~%~": "R<MultiplicativeExpression>3",
    "~**~": "R<MultiplicativeExpression>3"
  },
  "~**~87,2": {
    "<UnaryExpression>": "<UnaryExpression>87,3",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<UnaryExpression>87,3": {
    "~;~": "R<ExponentiationExpression>3",
    "~{~": "R<ExponentiationExpression>3",
    "~)~": "R<ExponentiationExpression>3",
    "~,~": "R<ExponentiationExpression>3",
    "~||~": "R<ExponentiationExpression>3",
    "~&&~": "R<ExponentiationExpression>3",
    "~==~": "R<ExponentiationExpression>3",
    "~!=~": "R<ExponentiationExpression>3",
    "~<~": "R<ExponentiationExpression>3",
    "~<=~": "R<ExponentiationExpression>3",
    "~>~": "R<ExponentiationExpression>3",
    "~>=~": "R<ExponentiationExpression>3",
    "~+~": "R<ExponentiationExpression>3",
    "~-~": "R<ExponentiationExpression>3",
    "~*~": "R<ExponentiationExpression>3",
    "~/~": "R<ExponentiationExpression>3",
    "~%~": "R<ExponentiationExpression>3",
    "~**~": "R<ExponentiationExpression>3"
  },
  "~-~89,1": {
    "<MultiplicativeExpression>": "<MultiplicativeExpression>81,3+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1+<UnaryExpression>89,2",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "~!~90,1": {
    "<UnaryExpression>": "<UnaryExpression>90,2",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<UnaryExpression>90,2": {
    "~;~": "R<UnaryExpression>2",
    "~{~": "R<UnaryExpression>2",
    "~)~": "R<UnaryExpression>2",
    "~,~": "R<UnaryExpression>2",
    "~||~": "R<UnaryExpression>2",
    "~&&~": "R<UnaryExpression>2",
    "~==~": "R<UnaryExpression>2",
    "~!=~": "R<UnaryExpression>2",
    "~<~": "R<UnaryExpression>2",
    "~<=~": "R<UnaryExpression>2",
    "~>~": "R<UnaryExpression>2",
    "~>=~": "R<UnaryExpression>2",
    "~+~": "R<UnaryExpression>2",
    "~-~": "R<UnaryExpression>2",
    "~*~": "R<UnaryExpression>2",
    "~/~": "R<UnaryExpression>2",
    "~%~": "R<UnaryExpression>2",
    "~**~": "R<UnaryExpression>2"
  },
  "<PrimaryExpression>91,1": {
    "~;~": "R<PostfixExpression>1",
    "~{~": "R<PostfixExpression>1",
    "~)~": "R<PostfixExpression>1",
    "~,~": "R<PostfixExpression>1",
    "~||~": "R<PostfixExpression>1",
    "~&&~": "R<PostfixExpression>1",
    "~==~": "R<PostfixExpression>1",
    "~!=~": "R<PostfixExpression>1",
    "~<~": "R<PostfixExpression>1",
    "~<=~": "R<PostfixExpression>1",
    "~>~": "R<PostfixExpression>1",
    "~>=~": "R<PostfixExpression>1",
    "~+~": "R<PostfixExpression>1",
    "~-~": "R<PostfixExpression>1",
    "~*~": "R<PostfixExpression>1",
    "~/~": "R<PostfixExpression>1",
    "~%~": "R<PostfixExpression>1",
    "~**~": "R<PostfixExpression>1",
    "~++~": "R<PostfixExpression>1",
    "~--~": "R<PostfixExpression>1"
  },
  "~++~92,2": {
    "~;~": "R<PostfixExpression>2",
    "~{~": "R<PostfixExpression>2",
    "~)~": "R<PostfixExpression>2",
    "~,~": "R<PostfixExpression>2",
    "~||~": "R<PostfixExpression>2",
    "~&&~": "R<PostfixExpression>2",
    "~==~": "R<PostfixExpression>2",
    "~!=~": "R<PostfixExpression>2",
    "~<~": "R<PostfixExpression>2",
    "~<=~": "R<PostfixExpression>2",
    "~>~": "R<PostfixExpression>2",
    "~>=~": "R<PostfixExpression>2",
    "~+~": "R<PostfixExpression>2",
    "~-~": "R<PostfixExpression>2",
    "~*~": "R<PostfixExpression>2",
    "~/~": "R<PostfixExpression>2",
    "~%~": "R<PostfixExpression>2",
    "~**~": "R<PostfixExpression>2",
    "~++~": "R<PostfixExpression>2",
    "~--~": "R<PostfixExpression>2"
  },
  "~--~93,2": {
    "~;~": "R<PostfixExpression>2",
    "~{~": "R<PostfixExpression>2",
    "~)~": "R<PostfixExpression>2",
    "~,~": "R<PostfixExpression>2",
    "~||~": "R<PostfixExpression>2",
    "~&&~": "R<PostfixExpression>2",
    "~==~": "R<PostfixExpression>2",
    "~!=~": "R<PostfixExpression>2",
    "~<~": "R<PostfixExpression>2",
    "~<=~": "R<PostfixExpression>2",
    "~>~": "R<PostfixExpression>2",
    "~>=~": "R<PostfixExpression>2",
    "~+~": "R<PostfixExpression>2",
    "~-~": "R<PostfixExpression>2",
    "~*~": "R<PostfixExpression>2",
    "~/~": "R<PostfixExpression>2",
    "~%~": "R<PostfixExpression>2",
    "~**~": "R<PostfixExpression>2",
    "~++~": "R<PostfixExpression>2",
    "~--~": "R<PostfixExpression>2"
  },
  "~NumberLiteral~94,1": {
    "~;~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~)~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1"
  },
  "~StringLiteral~95,1": {
    "~;~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~)~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1"
  },
  "~BooleanLiteral~96,1": {
    "~;~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~)~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1"
  },
  "~null~97,1": {
    "~;~": "R<PrimaryExpression>1",
    "~=~": "R<PrimaryExpression>1",
    "~)~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1"
  },
  "~(~99,1": {
    "<ParameterList>": "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4",
    "<Parameter>": "<Parameter>53,1",
    "~Identifier~": "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "<Expression>": "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ArgumentList>": "<ArgumentList>101,3+<ArgumentList>103,1",
    "<FirstForArgument>": "<FirstForArgument>107,3",
    "<VariableDeclaration>": "<VariableDeclaration>108,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<Assignment>": "<Assignment>110,1"
  },
  "<FunctionCall>100,1": {
    "~;~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~)~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1"
  },
  "~)~101,4": {
    "~:~": "R<FunctionCall>4",
    "~{~": "R<FunctionCall>4",
    "~;~": "R<FunctionCall>4",
    "~)~": "R<FunctionCall>4",
    "~,~": "R<FunctionCall>4",
    "~||~": "R<FunctionCall>4",
    "~&&~": "R<FunctionCall>4",
    "~==~": "R<FunctionCall>4",
    "~!=~": "R<FunctionCall>4",
    "~<~": "R<FunctionCall>4",
    "~<=~": "R<FunctionCall>4",
    "~>~": "R<FunctionCall>4",
    "~>=~": "R<FunctionCall>4",
    "~+~": "R<FunctionCall>4",
    "~-~": "R<FunctionCall>4",
    "~*~": "R<FunctionCall>4",
    "~/~": "R<FunctionCall>4",
    "~%~": "R<FunctionCall>4",
    "~**~": "R<FunctionCall>4",
    "~++~": "R<FunctionCall>4",
    "~--~": "R<FunctionCall>4"
  },
  "~,~103,2": {
    "<ImportSpecifierList>": "<ImportSpecifierList>42,3",
    "<ImportSpecifier>": "<ImportSpecifier>41,1+<ImportSpecifier>42,1",
    "~Identifier~": "~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1+~Identifier~56,1+~Identifier~98,1+~Identifier~101,1",
    "<ExportSpecifierList>": "<ExportSpecifierList>48,3",
    "<ExportSpecifier>": "<ExportSpecifier>47,1+<ExportSpecifier>48,1",
    "<Parameter>": "<Parameter>54,3",
    "<Expression>": "<Expression>103,3",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<Expression>103,3": {
    "~;~": "R<ArgumentList>3",
    "~{~": "R<ArgumentList>3",
    "~)~": "R<ArgumentList>3",
    "~,~": "R<ArgumentList>3"
  },
  "~else~106,6": {
    "<Block>": "<Block>106,7",
    "~{~": "~{~10,1"
  },
  "<Block>106,7": {
    "~}~": "R<IfStatement>7",
    "<ClassElement>": "R<IfStatement>7",
    "<PropertyDefinition>": "R<IfStatement>7",
    "<AccessibilityModifier>": "R<IfStatement>7",
    "~public~": "R<IfStatement>7",
    "~private~": "R<IfStatement>7",
    "~protected~": "R<IfStatement>7",
    "~ε~": "R<IfStatement>7",
    "<MethodDefinition>": "R<IfStatement>7",
    "~#~": "R<IfStatement>7",
    "<Statement>": "R<IfStatement>7",
    "<Declaration>": "R<IfStatement>7",
    "<VariableDeclaration>": "R<IfStatement>7",
    "~var~": "R<IfStatement>7",
    "~const~": "R<IfStatement>7",
    "<FunctionDeclaration>": "R<IfStatement>7",
    "~function~": "R<IfStatement>7",
    "<ClassDeclaration>": "R<IfStatement>7",
    "<AbstractModifier>": "R<IfStatement>7",
    "~abstract~": "R<IfStatement>7",
    "<ImportDeclaration>": "R<IfStatement>7",
    "~import~": "R<IfStatement>7",
    "<ExportDeclaration>": "R<IfStatement>7",
    "~export~": "R<IfStatement>7",
    "<Expression>": "R<IfStatement>7",
    "<LogicalOrExpression>": "R<IfStatement>7",
    "<LogicalAndExpression>": "R<IfStatement>7",
    "<EqualityExpression>": "R<IfStatement>7",
    "<RelationalExpression>": "R<IfStatement>7",
    "<AdditiveExpression>": "R<IfStatement>7",
    "<MultiplicativeExpression>": "R<IfStatement>7",
    "<ExponentiationExpression>": "R<IfStatement>7",
    "<UnaryExpression>": "R<IfStatement>7",
    "<PostfixExpression>": "R<IfStatement>7",
    "<PrimaryExpression>": "R<IfStatement>7",
    "~NumberLiteral~": "R<IfStatement>7",
    "~StringLiteral~": "R<IfStatement>7",
    "~BooleanLiteral~": "R<IfStatement>7",
    "~null~": "R<IfStatement>7",
    "~Identifier~": "R<IfStatement>7",
    "~(~": "R<IfStatement>7",
    "<FunctionCall>": "R<IfStatement>7",
    "~-~": "R<IfStatement>7",
    "~!~": "R<IfStatement>7",
    "<IfStatement>": "R<IfStatement>7",
    "~if~": "R<IfStatement>7",
    "<ForStatement>": "R<IfStatement>7",
    "~for~": "R<IfStatement>7",
    "<ReturnStatement>": "R<IfStatement>7",
    "~return~": "R<IfStatement>7",
    "<Assignment>": "R<IfStatement>7",
    "~else~": "R<IfStatement>7"
  },
  "~for~107,1": {
    "~(~": "~(~107,2"
  },
  "~(~107,2": {
    "<ParameterList>": "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4",
    "<Parameter>": "<Parameter>53,1",
    "~Identifier~": "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "<Expression>": "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ArgumentList>": "<ArgumentList>101,3+<ArgumentList>103,1",
    "<FirstForArgument>": "<FirstForArgument>107,3",
    "<VariableDeclaration>": "<VariableDeclaration>108,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<Assignment>": "<Assignment>110,1"
  },
  "<FirstForArgument>107,3": {
    "~;~": "~;~107,4"
  },
  "~;~107,4": {
    "<SecondForArgument>": "<SecondForArgument>107,5",
    "<Expression>": "<Expression>112,1+<Expression>114,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ThirdForArgument>": "<ThirdForArgument>107,7"
  },
  "<SecondForArgument>107,5": {
    "~;~": "~;~107,6"
  },
  "~;~107,6": {
    "<SecondForArgument>": "<SecondForArgument>107,5",
    "<Expression>": "<Expression>112,1+<Expression>114,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ThirdForArgument>": "<ThirdForArgument>107,7"
  },
  "<ThirdForArgument>107,7": {
    "~)~": "~)~107,8"
  },
  "~)~107,8": {
    "~:~": "~:~30,8+~:~52,6",
    "<Block>": "<Block>31,8+<Block>105,5+<Block>106,5+<Block>107,9",
    "~{~": "~{~10,1"
  },
  "<VariableDeclaration>108,1": {
    "~;~": "R<FirstForArgument>1"
  },
  "<Assignment>110,1": {
    "~;~": "R<FirstForArgument>1"
  },
  "<Expression>116,2": {
    "~;~": "R<ReturnStatement>2",
    "~{~": "R<ReturnStatement>2",
    "~)~": "R<ReturnStatement>2",
    "~,~": "R<ReturnStatement>2"
  },
  "<AssignmentOperator>118,2": {
    "<Expression>": "<Expression>118,3",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<Expression>118,3": {
    "~;~": "R<Assignment>3",
    "~{~": "R<Assignment>3",
    "~)~": "R<Assignment>3",
    "~,~": "R<Assignment>3"
  },
  "~=~119,1": {
    "<LogicalOrExpression>": "R<AssignmentOperator>1",
    "<LogicalAndExpression>": "R<AssignmentOperator>1",
    "<EqualityExpression>": "R<AssignmentOperator>1",
    "<RelationalExpression>": "R<AssignmentOperator>1",
    "<AdditiveExpression>": "R<AssignmentOperator>1",
    "<MultiplicativeExpression>": "R<AssignmentOperator>1",
    "<ExponentiationExpression>": "R<AssignmentOperator>1",
    "<UnaryExpression>": "R<AssignmentOperator>1",
    "<PostfixExpression>": "R<AssignmentOperator>1",
    "<PrimaryExpression>": "R<AssignmentOperator>1",
    "~NumberLiteral~": "R<AssignmentOperator>1",
    "~StringLiteral~": "R<AssignmentOperator>1",
    "~BooleanLiteral~": "R<AssignmentOperator>1",
    "~null~": "R<AssignmentOperator>1",
    "~Identifier~": "R<AssignmentOperator>1",
    "~(~": "R<AssignmentOperator>1",
    "<FunctionCall>": "R<AssignmentOperator>1",
    "~-~": "R<AssignmentOperator>1",
    "~!~": "R<AssignmentOperator>1"
  },
  "~+=~120,1": {
    "<LogicalOrExpression>": "R<AssignmentOperator>1",
    "<LogicalAndExpression>": "R<AssignmentOperator>1",
    "<EqualityExpression>": "R<AssignmentOperator>1",
    "<RelationalExpression>": "R<AssignmentOperator>1",
    "<AdditiveExpression>": "R<AssignmentOperator>1",
    "<MultiplicativeExpression>": "R<AssignmentOperator>1",
    "<ExponentiationExpression>": "R<AssignmentOperator>1",
    "<UnaryExpression>": "R<AssignmentOperator>1",
    "<PostfixExpression>": "R<AssignmentOperator>1",
    "<PrimaryExpression>": "R<AssignmentOperator>1",
    "~NumberLiteral~": "R<AssignmentOperator>1",
    "~StringLiteral~": "R<AssignmentOperator>1",
    "~BooleanLiteral~": "R<AssignmentOperator>1",
    "~null~": "R<AssignmentOperator>1",
    "~Identifier~": "R<AssignmentOperator>1",
    "~(~": "R<AssignmentOperator>1",
    "<FunctionCall>": "R<AssignmentOperator>1",
    "~-~": "R<AssignmentOperator>1",
    "~!~": "R<AssignmentOperator>1"
  },
  "~-=~121,1": {
    "<LogicalOrExpression>": "R<AssignmentOperator>1",
    "<LogicalAndExpression>": "R<AssignmentOperator>1",
    "<EqualityExpression>": "R<AssignmentOperator>1",
    "<RelationalExpression>": "R<AssignmentOperator>1",
    "<AdditiveExpression>": "R<AssignmentOperator>1",
    "<MultiplicativeExpression>": "R<AssignmentOperator>1",
    "<ExponentiationExpression>": "R<AssignmentOperator>1",
    "<UnaryExpression>": "R<AssignmentOperator>1",
    "<PostfixExpression>": "R<AssignmentOperator>1",
    "<PrimaryExpression>": "R<AssignmentOperator>1",
    "~NumberLiteral~": "R<AssignmentOperator>1",
    "~StringLiteral~": "R<AssignmentOperator>1",
    "~BooleanLiteral~": "R<AssignmentOperator>1",
    "~null~": "R<AssignmentOperator>1",
    "~Identifier~": "R<AssignmentOperator>1",
    "~(~": "R<AssignmentOperator>1",
    "<FunctionCall>": "R<AssignmentOperator>1",
    "~-~": "R<AssignmentOperator>1",
    "~!~": "R<AssignmentOperator>1"
  },
  "<Statement>1,1+<Statement>2,1": {
    "~#~": "R<StatementList>1",
    "~}~": "R<StatementList>1",
    "<Statement>": "<Statement>1,1+<Statement>2,1",
    "<Declaration>": "<Declaration>4,1",
    "<VariableDeclaration>": "<VariableDeclaration>11,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<FunctionDeclaration>": "<FunctionDeclaration>12,1",
    "~function~": "~function~52,1",
    "<ClassDeclaration>": "<ClassDeclaration>13,1",
    "<AbstractModifier>": "<AbstractModifier>19,1",
    "~abstract~": "~abstract~20,1",
    "~ε~": "R<StatementList>1",
    "<ImportDeclaration>": "<ImportDeclaration>14,1",
    "~import~": "~import~40,1",
    "<ExportDeclaration>": "<ExportDeclaration>15,1",
    "~export~": "~export~46,1",
    "<Expression>": "<Expression>5,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<IfStatement>": "<IfStatement>6,1",
    "~if~": "~if~105,1+~if~106,1",
    "<ForStatement>": "<ForStatement>7,1",
    "~for~": "~for~107,1",
    "<ReturnStatement>": "<ReturnStatement>8,1",
    "~return~": "~return~116,1+~return~117,1",
    "<Assignment>": "<Assignment>9,1"
  },
  "~var~16,1+~var~17,1": {
    "~Identifier~": "~Identifier~16,2+~Identifier~17,2"
  },
  "~Identifier~56,1+~Identifier~98,1": {
    "~:~": "R<PrimaryExpression>1",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "R<PrimaryExpression>1",
    "~(~": "R<PrimaryExpression>1",
    "~as~": "R<PrimaryExpression>1",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "R<PrimaryExpression>1",
    "~+=~": "R<PrimaryExpression>1",
    "~-=~": "R<PrimaryExpression>1"
  },
  "~Identifier~98,1+~Identifier~101,1": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "~extends~": "~extends~22,1",
    "~ε~": "R<PrimaryExpression>1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "~}~": "R<PrimaryExpression>1",
    "~,~": "R<PrimaryExpression>1",
    "~;~": "R<PrimaryExpression>1",
    "~=~": "~=~119,1",
    "~)~": "R<PrimaryExpression>1",
    "~{~": "R<PrimaryExpression>1",
    "~||~": "R<PrimaryExpression>1",
    "~&&~": "R<PrimaryExpression>1",
    "~==~": "R<PrimaryExpression>1",
    "~!=~": "R<PrimaryExpression>1",
    "~<~": "R<PrimaryExpression>1",
    "~<=~": "R<PrimaryExpression>1",
    "~>~": "R<PrimaryExpression>1",
    "~>=~": "R<PrimaryExpression>1",
    "~+~": "R<PrimaryExpression>1",
    "~-~": "R<PrimaryExpression>1",
    "~*~": "R<PrimaryExpression>1",
    "~/~": "R<PrimaryExpression>1",
    "~%~": "R<PrimaryExpression>1",
    "~**~": "R<PrimaryExpression>1",
    "~++~": "R<PrimaryExpression>1",
    "~--~": "R<PrimaryExpression>1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1": {
    "~;~": "R<Expression>1",
    "~{~": "R<Expression>1",
    "~)~": "R<Expression>1",
    "~,~": "R<Expression>1",
    "~||~": "~||~68,2"
  },
  "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1": {
    "~;~": "R<LogicalOrExpression>1",
    "~{~": "R<LogicalOrExpression>1",
    "~)~": "R<LogicalOrExpression>1",
    "~,~": "R<LogicalOrExpression>1",
    "~||~": "R<LogicalOrExpression>1",
    "~&&~": "~&&~70,2"
  },
  "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1": {
    "~;~": "R<LogicalAndExpression>1",
    "~{~": "R<LogicalAndExpression>1",
    "~)~": "R<LogicalAndExpression>1",
    "~,~": "R<LogicalAndExpression>1",
    "~||~": "R<LogicalAndExpression>1",
    "~&&~": "R<LogicalAndExpression>1",
    "~==~": "~==~72,2",
    "~!=~": "~!=~73,2"
  },
  "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1": {
    "~;~": "R<EqualityExpression>1",
    "~{~": "R<EqualityExpression>1",
    "~)~": "R<EqualityExpression>1",
    "~,~": "R<EqualityExpression>1",
    "~||~": "R<EqualityExpression>1",
    "~&&~": "R<EqualityExpression>1",
    "~==~": "R<EqualityExpression>1",
    "~!=~": "R<EqualityExpression>1",
    "~<~": "~<~75,2",
    "~<=~": "~<=~76,2",
    "~>~": "~>~77,2",
    "~>=~": "~>=~78,2"
  },
  "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1": {
    "~;~": "R<RelationalExpression>1",
    "~{~": "R<RelationalExpression>1",
    "~)~": "R<RelationalExpression>1",
    "~,~": "R<RelationalExpression>1",
    "~||~": "R<RelationalExpression>1",
    "~&&~": "R<RelationalExpression>1",
    "~==~": "R<RelationalExpression>1",
    "~!=~": "R<RelationalExpression>1",
    "~<~": "R<RelationalExpression>1",
    "~<=~": "R<RelationalExpression>1",
    "~>~": "R<RelationalExpression>1",
    "~>=~": "R<RelationalExpression>1",
    "~+~": "~+~80,2",
    "~-~": "~-~81,2"
  },
  "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1": {
    "~;~": "R<AdditiveExpression>1",
    "~{~": "R<AdditiveExpression>1",
    "~)~": "R<AdditiveExpression>1",
    "~,~": "R<AdditiveExpression>1",
    "~||~": "R<AdditiveExpression>1",
    "~&&~": "R<AdditiveExpression>1",
    "~==~": "R<AdditiveExpression>1",
    "~!=~": "R<AdditiveExpression>1",
    "~<~": "R<AdditiveExpression>1",
    "~<=~": "R<AdditiveExpression>1",
    "~>~": "R<AdditiveExpression>1",
    "~>=~": "R<AdditiveExpression>1",
    "~+~": "R<AdditiveExpression>1",
    "~-~": "R<AdditiveExpression>1",
    "~*~": "~*~83,2",
    "~/~": "~/~84,2",
    "~%~": "~%~85,2"
  },
  "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1": {
    "~;~": "R<MultiplicativeExpression>1",
    "~{~": "R<MultiplicativeExpression>1",
    "~)~": "R<MultiplicativeExpression>1",
    "~,~": "R<MultiplicativeExpression>1",
    "~||~": "R<MultiplicativeExpression>1",
    "~&&~": "R<MultiplicativeExpression>1",
    "~==~": "R<MultiplicativeExpression>1",
    "~!=~": "R<MultiplicativeExpression>1",
    "~<~": "R<MultiplicativeExpression>1",
    "~<=~": "R<MultiplicativeExpression>1",
    "~>~": "R<MultiplicativeExpression>1",
    "~>=~": "R<MultiplicativeExpression>1",
    "~+~": "R<MultiplicativeExpression>1",
    "~-~": "R<MultiplicativeExpression>1",
    "~*~": "R<MultiplicativeExpression>1",
    "~/~": "R<MultiplicativeExpression>1",
    "~%~": "R<MultiplicativeExpression>1",
    "~**~": "~**~87,2"
  },
  "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1": {
    "~;~": "R<UnaryExpression>1",
    "~{~": "R<UnaryExpression>1",
    "~)~": "R<UnaryExpression>1",
    "~,~": "R<UnaryExpression>1",
    "~||~": "R<UnaryExpression>1",
    "~&&~": "R<UnaryExpression>1",
    "~==~": "R<UnaryExpression>1",
    "~!=~": "R<UnaryExpression>1",
    "~<~": "R<UnaryExpression>1",
    "~<=~": "R<UnaryExpression>1",
    "~>~": "R<UnaryExpression>1",
    "~>=~": "R<UnaryExpression>1",
    "~+~": "R<UnaryExpression>1",
    "~-~": "R<UnaryExpression>1",
    "~*~": "R<UnaryExpression>1",
    "~/~": "R<UnaryExpression>1",
    "~%~": "R<UnaryExpression>1",
    "~**~": "R<UnaryExpression>1",
    "~++~": "~++~92,2",
    "~--~": "~--~93,2"
  },
  "~if~105,1+~if~106,1": {
    "~(~": "~(~105,2+~(~106,2"
  },
  "~return~116,1+~return~117,1": {
    "<Expression>": "<Expression>116,2",
    "<LogicalOrExpression>": "R<ReturnStatement>1",
    "<LogicalAndExpression>": "R<ReturnStatement>1",
    "<EqualityExpression>": "R<ReturnStatement>1",
    "<RelationalExpression>": "R<ReturnStatement>1",
    "<AdditiveExpression>": "R<ReturnStatement>1",
    "<MultiplicativeExpression>": "R<ReturnStatement>1",
    "<ExponentiationExpression>": "R<ReturnStatement>1",
    "<UnaryExpression>": "R<ReturnStatement>1",
    "<PostfixExpression>": "R<ReturnStatement>1",
    "<PrimaryExpression>": "R<ReturnStatement>1",
    "~NumberLiteral~": "R<ReturnStatement>1",
    "~StringLiteral~": "R<ReturnStatement>1",
    "~BooleanLiteral~": "R<ReturnStatement>1",
    "~null~": "R<ReturnStatement>1",
    "~Identifier~": "R<ReturnStatement>1",
    "~(~": "R<ReturnStatement>1",
    "<FunctionCall>": "R<ReturnStatement>1",
    "~-~": "R<ReturnStatement>1",
    "~!~": "R<ReturnStatement>1"
  },
  "~;~5,2+~;~29,9": {
    "~#~": "R<PropertyDefinition>9",
    "~}~": "R<PropertyDefinition>9",
    "<Statement>": "R<PropertyDefinition>9",
    "<Declaration>": "R<PropertyDefinition>9",
    "<VariableDeclaration>": "R<PropertyDefinition>9",
    "~var~": "R<PropertyDefinition>9",
    "~const~": "R<PropertyDefinition>9",
    "<FunctionDeclaration>": "R<PropertyDefinition>9",
    "~function~": "R<PropertyDefinition>9",
    "<ClassDeclaration>": "R<PropertyDefinition>9",
    "<AbstractModifier>": "R<PropertyDefinition>9",
    "~abstract~": "R<PropertyDefinition>9",
    "~ε~": "R<PropertyDefinition>9",
    "<ImportDeclaration>": "R<PropertyDefinition>9",
    "~import~": "R<PropertyDefinition>9",
    "<ExportDeclaration>": "R<PropertyDefinition>9",
    "~export~": "R<PropertyDefinition>9",
    "<Expression>": "R<PropertyDefinition>9",
    "<LogicalOrExpression>": "R<PropertyDefinition>9",
    "<LogicalAndExpression>": "R<PropertyDefinition>9",
    "<EqualityExpression>": "R<PropertyDefinition>9",
    "<RelationalExpression>": "R<PropertyDefinition>9",
    "<AdditiveExpression>": "R<PropertyDefinition>9",
    "<MultiplicativeExpression>": "R<PropertyDefinition>9",
    "<ExponentiationExpression>": "R<PropertyDefinition>9",
    "<UnaryExpression>": "R<PropertyDefinition>9",
    "<PostfixExpression>": "R<PropertyDefinition>9",
    "<PrimaryExpression>": "R<PropertyDefinition>9",
    "~NumberLiteral~": "R<PropertyDefinition>9",
    "~StringLiteral~": "R<PropertyDefinition>9",
    "~BooleanLiteral~": "R<PropertyDefinition>9",
    "~null~": "R<PropertyDefinition>9",
    "~Identifier~": "R<PropertyDefinition>9",
    "~(~": "R<PropertyDefinition>9",
    "<FunctionCall>": "R<PropertyDefinition>9",
    "~-~": "R<PropertyDefinition>9",
    "~!~": "R<PropertyDefinition>9",
    "<IfStatement>": "R<PropertyDefinition>9",
    "~if~": "R<PropertyDefinition>9",
    "<ForStatement>": "R<PropertyDefinition>9",
    "~for~": "R<PropertyDefinition>9",
    "<ReturnStatement>": "R<PropertyDefinition>9",
    "~return~": "R<PropertyDefinition>9",
    "<Assignment>": "R<PropertyDefinition>9",
    "<ClassElement>": "R<PropertyDefinition>9",
    "<PropertyDefinition>": "R<PropertyDefinition>9",
    "<AccessibilityModifier>": "R<PropertyDefinition>9",
    "~public~": "R<PropertyDefinition>9",
    "~private~": "R<PropertyDefinition>9",
    "~protected~": "R<PropertyDefinition>9",
    "<MethodDefinition>": "R<PropertyDefinition>9"
  },
  "~)~99,3+~)~105,4+~)~106,4": {
    "~:~": "~:~30,8+~:~52,6",
    "~{~": "~{~10,1",
    "~;~": "R<PrimaryExpression>3",
    "~)~": "R<PrimaryExpression>3",
    "~,~": "R<PrimaryExpression>3",
    "~||~": "R<PrimaryExpression>3",
    "~&&~": "R<PrimaryExpression>3",
    "~==~": "R<PrimaryExpression>3",
    "~!=~": "R<PrimaryExpression>3",
    "~<~": "R<PrimaryExpression>3",
    "~<=~": "R<PrimaryExpression>3",
    "~>~": "R<PrimaryExpression>3",
    "~>=~": "R<PrimaryExpression>3",
    "~+~": "R<PrimaryExpression>3",
    "~-~": "R<PrimaryExpression>3",
    "~*~": "R<PrimaryExpression>3",
    "~/~": "R<PrimaryExpression>3",
    "~%~": "R<PrimaryExpression>3",
    "~**~": "R<PrimaryExpression>3",
    "~++~": "R<PrimaryExpression>3",
    "~--~": "R<PrimaryExpression>3"
  },
  "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1": {
    "<StaticModifier>": "<StaticModifier>29,2+<StaticModifier>30,2+<StaticModifier>31,2",
    "~static~": "~static~36,1"
  },
  "<ClassElement>24,1+<ClassElement>25,1": {
    "~}~": "R<ClassElementList>1",
    "<ClassElement>": "<ClassElement>24,1+<ClassElement>25,1",
    "<PropertyDefinition>": "<PropertyDefinition>27,1",
    "<AccessibilityModifier>": "<AccessibilityModifier>29,1+<AccessibilityModifier>30,1+<AccessibilityModifier>31,1",
    "~public~": "~public~32,1",
    "~private~": "~private~33,1",
    "~protected~": "~protected~34,1",
    "~ε~": "R<ClassElementList>1",
    "<MethodDefinition>": "<MethodDefinition>28,1"
  },
  "~Identifier~98,1+~Identifier~101,1+~Identifier~118,1+~Identifier~44,1": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<ImportSpecifier>41,1+<ImportSpecifier>42,1": {
    "~}~": "R<ImportSpecifierList>1",
    "~,~": "~,~42,2"
  },
  "<ExportSpecifier>47,1+<ExportSpecifier>48,1": {
    "~}~": "R<ExportSpecifierList>1",
    "~,~": "~,~48,2"
  },
  "~Identifier~16,2+~Identifier~17,2": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "~as~44,2+~as~50,2": {
    "~Identifier~": "~Identifier~44,3+~Identifier~50,3"
  },
  "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2": {
    "<Type>": "<Type>16,4+<Type>17,4+<Type>18,4+<Type>29,6+<Type>64,1+<Type>56,3",
    "~number~": "~number~57,1",
    "~bool~": "~bool~58,1",
    "~null~": "~null~59,1",
    "~object~": "~object~60,1",
    "~string~": "~string~61,1",
    "~array~": "~array~62,1",
    "~Identifier~": "~Identifier~63,1",
    "<FunctionReturnType>": "<FunctionReturnType>30,9+<FunctionReturnType>52,7",
    "~void~": "~void~65,1"
  },
  "~(~30,5+~(~52,3+~(~101,2": {
    "<ParameterList>": "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4",
    "<Parameter>": "<Parameter>53,1",
    "~Identifier~": "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "<Expression>": "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ArgumentList>": "<ArgumentList>101,3+<ArgumentList>103,1",
    "<FirstForArgument>": "<FirstForArgument>107,3",
    "<VariableDeclaration>": "<VariableDeclaration>108,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<Assignment>": "<Assignment>110,1"
  },
  "<FunctionReturnType>30,9+<FunctionReturnType>52,7": {
    "<Block>": "<Block>30,10+<Block>52,8",
    "~{~": "~{~10,1"
  },
  "<Type>16,4+<Type>17,4+<Type>18,4+<Type>29,6+<Type>64,1+<Type>56,3": {
    "~;~": "R<Parameter>3",
    "~=~": "R<Parameter>3",
    "~)~": "R<Parameter>3",
    "~,~": "R<Parameter>3",
    "~{~": "R<Parameter>3"
  },
  "~=~17,5+~=~18,5+~=~29,7": {
    "<Expression>": "<Expression>17,6+<Expression>18,6+<Expression>29,8",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~Identifier~": "~Identifier~98,1+~Identifier~101,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1"
  },
  "<Expression>17,6+<Expression>18,6+<Expression>29,8": {
    "~;~": "~;~5,2+~;~29,9",
    "~{~": "R<VariableDeclaration>6",
    "~)~": "~)~99,3+~)~105,4+~)~106,4",
    "~,~": "R<VariableDeclaration>6"
  },
  "<StaticModifier>29,2+<StaticModifier>30,2+<StaticModifier>31,2": {
    "<OverrideModifier>": "<OverrideModifier>29,3+<OverrideModifier>30,3+<OverrideModifier>31,3",
    "~override~": "~override~38,1"
  },
  "<OverrideModifier>29,3+<OverrideModifier>30,3+<OverrideModifier>31,3": {
    "~Identifier~": "~Identifier~29,4+~Identifier~30,4",
    "~constructor~": "~constructor~31,4"
  },
  "~Identifier~29,4+~Identifier~30,4": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4": {
    "~)~": "~)~30,7+~)~31,7+~)~52,5",
    "~,~": "~,~54,2"
  },
  "<ArgumentList>101,3+<ArgumentList>103,1": {
    "~)~": "~)~101,4",
    "~,~": "~,~103,2"
  },
  "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1": {
    "~;~": "R<FirstForArgument>1",
    "~)~": "R<FirstForArgument>1"
  },
  "~)~30,7+~)~31,7+~)~52,5": {
    "~:~": "~:~30,8+~:~52,6",
    "<Block>": "<Block>31,8+<Block>105,5+<Block>106,5+<Block>107,9",
    "~{~": "~{~10,1"
  },
  "~:~30,8+~:~52,6": {
    "<Type>": "<Type>16,4+<Type>17,4+<Type>18,4+<Type>29,6+<Type>64,1+<Type>56,3",
    "~number~": "~number~57,1",
    "~bool~": "~bool~58,1",
    "~null~": "~null~59,1",
    "~object~": "~object~60,1",
    "~string~": "~string~61,1",
    "~array~": "~array~62,1",
    "~Identifier~": "~Identifier~63,1",
    "<FunctionReturnType>": "<FunctionReturnType>30,9+<FunctionReturnType>52,7",
    "~void~": "~void~65,1"
  },
  "<Block>31,8+<Block>105,5+<Block>106,5+<Block>107,9": {
    "~}~": "R<ForStatement>9",
    "<ClassElement>": "R<ForStatement>9",
    "<PropertyDefinition>": "R<ForStatement>9",
    "<AccessibilityModifier>": "R<ForStatement>9",
    "~public~": "R<ForStatement>9",
    "~private~": "R<ForStatement>9",
    "~protected~": "R<ForStatement>9",
    "~ε~": "R<ForStatement>9",
    "<MethodDefinition>": "R<ForStatement>9",
    "~#~": "R<ForStatement>9",
    "<Statement>": "R<ForStatement>9",
    "<Declaration>": "R<ForStatement>9",
    "<VariableDeclaration>": "R<ForStatement>9",
    "~var~": "R<ForStatement>9",
    "~const~": "R<ForStatement>9",
    "<FunctionDeclaration>": "R<ForStatement>9",
    "~function~": "R<ForStatement>9",
    "<ClassDeclaration>": "R<ForStatement>9",
    "<AbstractModifier>": "R<ForStatement>9",
    "~abstract~": "R<ForStatement>9",
    "<ImportDeclaration>": "R<ForStatement>9",
    "~import~": "R<ForStatement>9",
    "<ExportDeclaration>": "R<ForStatement>9",
    "~export~": "R<ForStatement>9",
    "<Expression>": "R<ForStatement>9",
    "<LogicalOrExpression>": "R<ForStatement>9",
    "<LogicalAndExpression>": "R<ForStatement>9",
    "<EqualityExpression>": "R<ForStatement>9",
    "<RelationalExpression>": "R<ForStatement>9",
    "<AdditiveExpression>": "R<ForStatement>9",
    "<MultiplicativeExpression>": "R<ForStatement>9",
    "<ExponentiationExpression>": "R<ForStatement>9",
    "<UnaryExpression>": "R<ForStatement>9",
    "<PostfixExpression>": "R<ForStatement>9",
    "<PrimaryExpression>": "R<ForStatement>9",
    "~NumberLiteral~": "R<ForStatement>9",
    "~StringLiteral~": "R<ForStatement>9",
    "~BooleanLiteral~": "R<ForStatement>9",
    "~null~": "R<ForStatement>9",
    "~Identifier~": "R<ForStatement>9",
    "~(~": "R<ForStatement>9",
    "<FunctionCall>": "R<ForStatement>9",
    "~-~": "R<ForStatement>9",
    "~!~": "R<ForStatement>9",
    "<IfStatement>": "R<ForStatement>9",
    "~if~": "R<ForStatement>9",
    "<ForStatement>": "R<ForStatement>9",
    "~for~": "R<ForStatement>9",
    "<ReturnStatement>": "R<ForStatement>9",
    "~return~": "R<ForStatement>9",
    "<Assignment>": "R<ForStatement>9",
    "~else~": "R<ForStatement>9"
  },
  "<Block>30,10+<Block>52,8": {
    "~}~": "R<FunctionDeclaration>8",
    "<ClassElement>": "R<FunctionDeclaration>8",
    "<PropertyDefinition>": "R<FunctionDeclaration>8",
    "<AccessibilityModifier>": "R<FunctionDeclaration>8",
    "~public~": "R<FunctionDeclaration>8",
    "~private~": "R<FunctionDeclaration>8",
    "~protected~": "R<FunctionDeclaration>8",
    "~ε~": "R<FunctionDeclaration>8",
    "<MethodDefinition>": "R<FunctionDeclaration>8",
    "~#~": "R<FunctionDeclaration>8",
    "<Statement>": "R<FunctionDeclaration>8",
    "<Declaration>": "R<FunctionDeclaration>8",
    "<VariableDeclaration>": "R<FunctionDeclaration>8",
    "~var~": "R<FunctionDeclaration>8",
    "~const~": "R<FunctionDeclaration>8",
    "<FunctionDeclaration>": "R<FunctionDeclaration>8",
    "~function~": "R<FunctionDeclaration>8",
    "<ClassDeclaration>": "R<FunctionDeclaration>8",
    "<AbstractModifier>": "R<FunctionDeclaration>8",
    "~abstract~": "R<FunctionDeclaration>8",
    "<ImportDeclaration>": "R<FunctionDeclaration>8",
    "~import~": "R<FunctionDeclaration>8",
    "<ExportDeclaration>": "R<FunctionDeclaration>8",
    "~export~": "R<FunctionDeclaration>8",
    "<Expression>": "R<FunctionDeclaration>8",
    "<LogicalOrExpression>": "R<FunctionDeclaration>8",
    "<LogicalAndExpression>": "R<FunctionDeclaration>8",
    "<EqualityExpression>": "R<FunctionDeclaration>8",
    "<RelationalExpression>": "R<FunctionDeclaration>8",
    "<AdditiveExpression>": "R<FunctionDeclaration>8",
    "<MultiplicativeExpression>": "R<FunctionDeclaration>8",
    "<ExponentiationExpression>": "R<FunctionDeclaration>8",
    "<UnaryExpression>": "R<FunctionDeclaration>8",
    "<PostfixExpression>": "R<FunctionDeclaration>8",
    "<PrimaryExpression>": "R<FunctionDeclaration>8",
    "~NumberLiteral~": "R<FunctionDeclaration>8",
    "~StringLiteral~": "R<FunctionDeclaration>8",
    "~BooleanLiteral~": "R<FunctionDeclaration>8",
    "~null~": "R<FunctionDeclaration>8",
    "~Identifier~": "R<FunctionDeclaration>8",
    "~(~": "R<FunctionDeclaration>8",
    "<FunctionCall>": "R<FunctionDeclaration>8",
    "~-~": "R<FunctionDeclaration>8",
    "~!~": "R<FunctionDeclaration>8",
    "<IfStatement>": "R<FunctionDeclaration>8",
    "~if~": "R<FunctionDeclaration>8",
    "<ForStatement>": "R<FunctionDeclaration>8",
    "~for~": "R<FunctionDeclaration>8",
    "<ReturnStatement>": "R<FunctionDeclaration>8",
    "~return~": "R<FunctionDeclaration>8",
    "<Assignment>": "R<FunctionDeclaration>8",
    "~else~": "R<FunctionDeclaration>8"
  },
  "~Identifier~44,1+~Identifier~45,1+~Identifier~50,1+~Identifier~51,1+~Identifier~56,1": {
    "~:~": "~:~16,3+~:~17,3+~:~18,3+~:~29,5+~:~56,2",
    "<SuperClass>": "<SuperClass>19,4",
    "~extends~": "~extends~22,1",
    "~(~": "~(~30,5+~(~52,3+~(~101,2",
    "~as~": "~as~44,2+~as~50,2",
    "<AssignmentOperator>": "<AssignmentOperator>118,2",
    "~=~": "~=~119,1",
    "~+=~": "~+=~120,1",
    "~-=~": "~-=~121,1"
  },
  "~Identifier~44,3+~Identifier~50,3": {
    "~:~": "R<ExportSpecifier>3",
    "~extends~": "R<ExportSpecifier>3",
    "~ε~": "R<ExportSpecifier>3",
    "~(~": "R<ExportSpecifier>3",
    "~as~": "R<ExportSpecifier>3",
    "~}~": "R<ExportSpecifier>3",
    "~,~": "R<ExportSpecifier>3",
    "~;~": "R<ExportSpecifier>3",
    "~=~": "R<ExportSpecifier>3",
    "~)~": "R<ExportSpecifier>3",
    "~{~": "R<ExportSpecifier>3",
    "~||~": "R<ExportSpecifier>3",
    "~&&~": "R<ExportSpecifier>3",
    "~==~": "R<ExportSpecifier>3",
    "~!=~": "R<ExportSpecifier>3",
    "~<~": "R<ExportSpecifier>3",
    "~<=~": "R<ExportSpecifier>3",
    "~>~": "R<ExportSpecifier>3",
    "~>=~": "R<ExportSpecifier>3",
    "~+~": "R<ExportSpecifier>3",
    "~-~": "R<ExportSpecifier>3",
    "~*~": "R<ExportSpecifier>3",
    "~/~": "R<ExportSpecifier>3",
    "~%~": "R<ExportSpecifier>3",
    "~**~": "R<ExportSpecifier>3",
    "~++~": "R<ExportSpecifier>3",
    "~--~": "R<ExportSpecifier>3",
    "~+=~": "R<ExportSpecifier>3",
    "~-=~": "R<ExportSpecifier>3"
  },
  "<UnaryExpression>86,1+<UnaryExpression>89,2": {
    "~;~": "R<UnaryExpression>2",
    "~{~": "R<UnaryExpression>2",
    "~)~": "R<UnaryExpression>2",
    "~,~": "R<UnaryExpression>2",
    "~||~": "R<UnaryExpression>2",
    "~&&~": "R<UnaryExpression>2",
    "~==~": "R<UnaryExpression>2",
    "~!=~": "R<UnaryExpression>2",
    "~<~": "R<UnaryExpression>2",
    "~<=~": "R<UnaryExpression>2",
    "~>~": "R<UnaryExpression>2",
    "~>=~": "R<UnaryExpression>2",
    "~+~": "R<UnaryExpression>2",
    "~-~": "R<UnaryExpression>2",
    "~*~": "R<UnaryExpression>2",
    "~/~": "R<UnaryExpression>2",
    "~%~": "R<UnaryExpression>2",
    "~**~": "R<UnaryExpression>2"
  },
  "~(~105,2+~(~106,2": {
    "<ParameterList>": "<ParameterList>30,6+<ParameterList>54,1+<ParameterList>31,6+<ParameterList>52,4",
    "<Parameter>": "<Parameter>53,1",
    "~Identifier~": "~Identifier~56,1+~Identifier~98,1+~Identifier~101,1+~Identifier~118,1",
    "<Expression>": "<Expression>99,2+<Expression>102,1+<Expression>105,3+<Expression>106,3+<Expression>109,1",
    "<LogicalOrExpression>": "<LogicalOrExpression>66,1+<LogicalOrExpression>68,1",
    "<LogicalAndExpression>": "<LogicalAndExpression>67,1+<LogicalAndExpression>70,1",
    "<EqualityExpression>": "<EqualityExpression>69,1+<EqualityExpression>72,1+<EqualityExpression>73,1",
    "<RelationalExpression>": "<RelationalExpression>71,1+<RelationalExpression>75,1+<RelationalExpression>76,1+<RelationalExpression>77,1+<RelationalExpression>78,1",
    "<AdditiveExpression>": "<AdditiveExpression>74,1+<AdditiveExpression>80,1+<AdditiveExpression>81,1",
    "<MultiplicativeExpression>": "<MultiplicativeExpression>79,1+<MultiplicativeExpression>83,1+<MultiplicativeExpression>84,1+<MultiplicativeExpression>85,1",
    "<ExponentiationExpression>": "<ExponentiationExpression>82,1+<ExponentiationExpression>87,1",
    "<UnaryExpression>": "<UnaryExpression>86,1",
    "<PostfixExpression>": "<PostfixExpression>88,1+<PostfixExpression>92,1+<PostfixExpression>93,1",
    "<PrimaryExpression>": "<PrimaryExpression>91,1",
    "~NumberLiteral~": "~NumberLiteral~94,1",
    "~StringLiteral~": "~StringLiteral~95,1",
    "~BooleanLiteral~": "~BooleanLiteral~96,1",
    "~null~": "~null~97,1",
    "~(~": "~(~99,1",
    "<FunctionCall>": "<FunctionCall>100,1",
    "~-~": "~-~89,1",
    "~!~": "~!~90,1",
    "<ArgumentList>": "<ArgumentList>101,3+<ArgumentList>103,1",
    "<FirstForArgument>": "<FirstForArgument>107,3",
    "<VariableDeclaration>": "<VariableDeclaration>108,1",
    "~var~": "~var~16,1+~var~17,1",
    "~const~": "~const~18,1",
    "<Assignment>": "<Assignment>110,1"
  },
  "<Expression>112,1+<Expression>114,1": {
    "~;~": "R<ThirdForArgument>1",
    "~{~": "R<ThirdForArgument>1",
    "~)~": "R<ThirdForArgument>1",
    "~,~": "R<ThirdForArgument>1"
  }
}